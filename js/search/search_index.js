var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.544,1,2.076]],["body/controllers/AppController.html",[0,2.62,1,2.945,2,1.649,3,0.426,4,0.426,5,0.287,6,2.871,7,1.276,8,3.724,9,0.426,10,1.321,11,2.251,12,5.466,13,1.51,14,0.033,15,3.44,16,3.316,17,5.466,18,3.967,19,2.871,20,3.316,21,3.316,22,0.644,23,3.44,24,1.58,25,4.562,26,3.967,27,2.19,28,0.705,29,0.841,30,3.814,31,3.724,32,1.649,33,2.871,34,1.274,35,1.173,36,2.99,37,2.871,38,2.945,39,3.44,40,0.426,41,0.125,42,1.386,43,1.51,44,1.808,45,2.217,46,1.649,47,1.08,48,2.945,49,2.497,50,0.915,51,3.44,52,0.023,53,0.023]],["title/modules/AppModule.html",[54,1.298,55,2.076]],["body/modules/AppModule.html",[1,2.679,2,1.668,3,0.515,4,0.29,5,0.29,14,0.033,28,0.741,29,0.571,36,2.711,37,1.951,40,0.29,41,0.085,44,2.419,47,0.734,50,0.926,52,0.017,53,0.017,54,1.401,55,3.782,56,1.12,57,1.527,58,1.951,59,1.951,60,1.951,61,2.99,62,2.99,63,2.99,64,2.017,65,1.355,66,1.12,67,2.337,68,2.242,69,3.572,70,3.842,71,3.616,72,1.355,73,2.337,74,1.951,75,1.951,76,1.697,77,3.479,78,1.355,79,3.469,80,2.337,81,2.679,82,2.967,83,2.337,84,2.337,85,3.479,86,1.951,87,1.951,88,2.337,89,2.337,90,2.337,91,2.337,92,2.337,93,2.337,94,2.337,95,1.951,96,2.337,97,2.525,98,2.337,99,1.951,100,2.337,101,1.951,102,2.337,103,1.951,104,2.337,105,1.951,106,2.337,107,1.951,108,2.337,109,1.951,110,2.337,111,1.951,112,2.337,113,1.951,114,2.337,115,2.337,116,3.016,117,3.469,118,1.951,119,2.337,120,2.337,121,2.337,122,1.697,123,2.337,124,0.29,125,2.337,126,2.337,127,2.337,128,2.337,129,2.337,130,0.866,131,2.337,132,0.942,133,2.337,134,1.229,135,2.337,136,1.507,137,2.337,138,2.337,139,2.337,140,3.479,141,2.904,142,2.337,143,2.206,144,1.697,145,2.337,146,2.337,147,4.155,148,4.603,149,3.479,150,3.479,151,1.668,152,3.479,153,1.854,154,3.479,155,3.479,156,2.337,157,3.479,158,2.337,159,2.337,160,2.337,161,2.337,162,2.337,163,2.337,164,2.337,165,2.337,166,2.337,167,2.337,168,2.337,169,2.337,170,2.337]],["title/injectables/AppService.html",[36,1.693,171,0.857]],["body/injectables/AppService.html",[3,0.434,4,0.434,5,0.292,7,1.037,9,0.434,10,1.337,14,0.033,22,0.866,24,1.592,25,4.777,26,4.154,28,0.682,29,0.856,33,4.32,34,1.297,35,1.194,36,2.43,40,0.434,41,0.127,42,2.217,43,1.537,44,2.893,46,1.679,47,1.1,50,0.932,52,0.023,53,0.023,81,2.257,82,2.98,116,2.542,124,0.434,144,3.356,171,1.23,172,1.679,173,2.923,174,3.859,175,5.504,176,3.502,177,6.084,178,3.502,179,1.1,180,0.719,181,1.013,182,3.502,183,3.502,184,3.502,185,1.841,186,3.502,187,3.502,188,3.502,189,2.542,190,3.502,191,2.923,192,2.257]],["title/controllers/AuthController.html",[0,1.544,193,2.076]],["body/controllers/AuthController.html",[0,2.079,2,1.205,3,0.312,4,0.312,5,0.21,7,1.369,9,0.312,10,1.062,11,2.324,13,1.611,14,0.033,18,2.665,19,3.065,20,3.462,22,0.688,24,1.062,27,1.76,28,0.695,29,0.615,31,3.97,32,1.205,34,0.932,35,0.858,38,2.796,40,0.312,41,0.091,42,1.479,43,2.093,44,1.93,46,1.76,48,3.414,49,2.665,50,0.977,52,0.018,53,0.018,124,0.455,179,1.153,180,0.754,181,1.062,185,1.93,193,2.367,194,2.099,195,2.099,196,2.515,197,3.682,198,4.069,199,3.981,200,2.515,201,2.94,202,2.515,203,4.769,204,4.769,205,3.672,206,4.769,207,4.769,208,2.515,209,4.769,210,3.065,211,2.665,212,3.065,213,2.128,214,3.07,215,3.074,216,2.515,217,2.94,218,2.515,219,4.769,220,2.515,221,2.515,222,1.826,223,2.515,224,2.099,225,2.099,226,1.767,227,1.621,228,2.666,229,2.099,230,2.099,231,2.515,232,2.099,233,2.515,234,2.515,235,2.099,236,2.099,237,2.515,238,2.515,239,1.611,240,0.754,241,2.367,242,2.515,243,3.672,244,2.515,245,2.515,246,2.515]],["title/modules/AuthModule.html",[54,1.298,61,1.867]],["body/modules/AuthModule.html",[2,2.052,3,0.387,4,0.387,5,0.261,11,1.37,14,0.033,28,0.761,29,0.763,40,0.387,41,0.113,50,0.831,52,0.021,53,0.021,54,1.724,56,1.497,57,1.878,61,3.59,64,2.481,65,1.81,66,1.497,68,2.759,69,3.107,70,4.077,71,3.386,72,1.81,76,2.267,78,1.81,116,2.267,117,2.607,193,3.148,226,2.106,227,2.013,228,3.255,229,2.607,240,0.641,247,2.607,248,2.607,249,2.607,250,3.59,251,3.123,252,3.573,253,3.123,254,2.267,255,3.123,256,2.013,257,1.878,258,3.123,259,2.013,260,1.642,261,3.123,262,3.123,263,2.607,264,3.123,265,3.123,266,1.81,267,3.123,268,3.123,269,2.607,270,3.123,271,4.28,272,3.123,273,1.81]],["title/injectables/AuthService.html",[171,0.857,228,1.693]],["body/injectables/AuthService.html",[3,0.293,4,0.293,5,0.197,7,0.787,9,0.293,10,1.015,11,2.274,14,0.033,22,0.867,24,1.339,27,2.484,28,0.683,29,0.578,34,0.876,35,0.807,40,0.293,41,0.086,42,1.865,43,2.274,44,2.724,46,2.484,50,0.934,52,0.017,53,0.017,71,3.458,72,1.371,124,0.613,130,1.715,132,1.414,134,1.845,153,0.953,171,0.934,172,1.134,179,1.314,180,1.015,181,1.21,185,2.724,197,2.548,198,1.717,201,2.867,213,2.035,214,2.426,215,1.525,222,2.548,225,1.975,226,2.085,227,1.525,228,1.845,230,1.975,239,1.038,240,1.231,241,1.525,254,1.717,260,1.244,266,2.684,273,2.426,274,1.975,275,1.54,276,4.63,277,4.185,278,4.185,279,2.366,280,5.509,281,3.51,282,2.366,283,2.366,284,2.93,285,2.548,286,3.999,287,2.93,288,2.366,289,2.366,290,3.51,291,2.263,292,2.93,293,3.51,294,2.93,295,3.494,296,2.93,297,2.93,298,3.494,299,3.51,300,2.366,301,1.975,302,1.845,303,2.035,304,2.035,305,2.366,306,2.366,307,2.366,308,2.366,309,3.51,310,2.366,311,1.717,312,1.717,313,1.975,314,2.366]],["title/injectables/CaslFactory.html",[171,0.857,315,1.544]],["body/injectables/CaslFactory.html",[3,0.412,4,0.412,5,0.277,9,0.412,10,1.291,14,0.033,22,0.622,24,0.961,28,0.668,29,0.812,34,1.231,35,1.522,40,0.553,41,0.12,50,0.884,52,0.022,53,0.022,124,0.668,130,1.231,153,1.338,171,1.187,172,1.592,179,1.043,180,0.682,181,0.961,239,1.458,240,1.234,260,1.746,315,2.139,316,2.411,317,4.463,318,4.463,319,3.322,320,2.922,321,4.463,322,4.463,323,4.463,324,3.726,325,2.773,326,2.411,327,2.773,328,3.322,329,4.463,330,3.726,331,3.322,332,3.24,333,3.322,334,3.322,335,3.322,336,3.726,337,1.926,338,3.322,339,2.773,340,4.463,341,3.322,342,2.587,343,2.411,344,3.322,345,4.208,346,3.322,347,3.726,348,4.463,349,3.322,350,3.322,351,3.322,352,3.322,353,3.322,354,3.322,355,1.592,356,2.773,357,3.322,358,3.322,359,3.322]],["title/modules/CaslModule.html",[54,1.298,62,1.867]],["body/modules/CaslModule.html",[3,0.528,4,0.528,5,0.355,14,0.032,28,0.649,29,1.042,40,0.528,41,0.155,52,0.026,53,0.026,54,2.111,56,2.043,57,2.299,62,3.633,64,3.037,65,2.47,66,2.043,68,3.377,252,4.374,315,3.105,360,3.557,361,3.557,362,3.557,363,4.261,364,2.747]],["title/classes/DeleteUserPolicyHandler.html",[41,0.117,365,1.867]],["body/classes/DeleteUserPolicyHandler.html",[3,0.484,4,0.484,5,0.326,9,0.484,10,1.435,14,0.032,22,0.731,24,1.129,28,0.676,34,1.447,35,1.332,40,0.615,41,0.142,50,1.039,52,0.025,53,0.025,124,0.676,179,1.227,180,0.801,181,1.129,240,1.018,260,2.053,320,2.876,326,2.835,337,3.508,355,1.872,364,2.517,365,2.876,366,3.198,367,2.517,368,3.198,369,3.326,370,4.142,371,4.552,372,3.905,373,2.264,374,4.142,375,3.601,376,2.264,377,2.835,378,2.264,379,3.26]],["title/interfaces/IPolicyHandler.html",[369,1.867,373,1.867]],["body/interfaces/IPolicyHandler.html",[3,0.485,4,0.485,5,0.327,9,0.485,10,1.437,14,0.032,22,0.733,24,1.133,28,0.677,34,1.451,35,1.336,40,0.616,41,0.142,50,1.042,52,0.025,53,0.025,124,0.677,179,1.23,180,0.804,181,1.133,240,1.02,260,2.059,320,2.881,326,2.843,337,3.511,364,2.525,365,2.27,366,3.204,367,2.525,368,2.525,369,3.329,370,4.149,371,4.558,373,2.27,374,4.558,375,3.608,376,2.27,377,2.843,378,2.27,379,3.269,380,3.917,381,3.917]],["title/injectables/JwtAuthGuard.html",[171,0.857,382,2.076]],["body/injectables/JwtAuthGuard.html",[3,0.456,4,0.456,5,0.307,7,0.826,9,0.456,10,1.382,14,0.033,22,0.895,24,1.065,28,0.695,29,0.9,40,0.456,41,0.134,42,1.484,45,2.374,50,1.271,52,0.024,53,0.024,124,0.592,143,1.765,171,1.271,172,1.765,179,1.501,180,0.98,181,1.382,197,3.468,232,3.074,239,1.616,256,2.374,266,2.77,382,3.08,383,4.427,384,3.074,385,3.08,386,3.988,387,3.074,388,4.975,389,3.683,390,3.988,391,4.685,392,3.683,393,3.074,394,2.374,395,3.683,396,2.673,397,3.074,398,3.683,399,3.074,400,3.988,401,3.683,402,3.074,403,3.683,404,3.683]],["title/injectables/JwtStrategy.html",[171,0.857,250,1.867]],["body/injectables/JwtStrategy.html",[3,0.388,4,0.388,5,0.261,7,0.702,9,0.388,10,1.24,11,2.146,14,0.033,22,0.803,24,1.24,27,2.344,28,0.705,29,0.765,40,0.388,41,0.177,42,2.119,43,2.146,46,2.055,52,0.021,53,0.021,71,3.823,72,1.815,124,0.531,171,1.141,172,1.5,179,1.346,180,0.88,181,1.24,185,2.253,210,4.081,226,2.197,227,2.018,235,2.613,239,1.374,240,0.642,250,2.485,256,2.018,260,1.645,266,3.048,269,2.613,285,3.112,286,3.999,297,2.613,302,1.645,397,2.613,399,2.613,405,2.613,406,4.889,407,3.13,408,3.13,409,3.13,410,5.259,411,3.13,412,4.287,413,4.287,414,3.579,415,3.112,416,3.13,417,3.13,418,2.613,419,3.13,420,3.13,421,3.13,422,3.13,423,2.272,424,3.13,425,3.13,426,3.13,427,3.13,428,4.287,429,4.287,430,4.287]],["title/classes/LoginDto.html",[41,0.117,201,1.867]],["body/classes/LoginDto.html",[3,0.474,4,0.474,5,0.319,7,0.858,9,0.474,13,2.15,14,0.032,22,0.917,28,0.607,32,1.835,40,0.474,41,0.207,47,1.789,52,0.024,53,0.024,124,0.607,130,2.181,132,2.371,143,2.348,198,3.556,201,2.84,215,3.158,275,2.15,355,1.835,431,3.196,432,3.556,433,3.196,434,3.828,435,4.134,436,2.779,437,3.828,438,3.921,439,3.556,440,3.921,441,2.779,442,2.468,443,3.158,444,2.779]],["title/classes/PasswordTransformer.html",[41,0.117,445,2.076]],["body/classes/PasswordTransformer.html",[3,0.449,4,0.449,5,0.302,7,1.18,9,0.449,10,1.367,14,0.032,22,0.885,24,1.367,28,0.586,40,0.449,41,0.191,43,2.075,47,2.018,50,1.258,52,0.023,53,0.023,124,0.586,132,1.905,151,1.737,179,1.485,180,0.97,181,1.367,355,1.737,368,3.048,445,3.048,446,3.025,447,3.432,448,5.263,449,4.728,450,3.624,451,4.728,452,4.656,453,5.045,454,4.728,455,3.624,456,4.728,457,3.947,458,3.025,459,3.624]],["title/classes/PatchUserDto.html",[41,0.117,460,1.867]],["body/classes/PatchUserDto.html",[3,0.411,4,0.411,5,0.276,7,0.743,9,0.411,13,2.363,14,0.033,22,1.008,28,0.552,32,1.588,40,0.411,41,0.195,47,1.887,52,0.022,53,0.022,124,0.667,130,2.081,132,2.263,143,1.588,180,1.153,214,2.583,240,0.914,275,1.955,304,3.257,355,1.588,432,2.405,435,4.363,436,2.405,438,4.078,439,3.235,440,4.2,441,2.405,442,2.136,443,2.136,444,2.405,460,2.583,461,4.69,462,2.766,463,3.72,464,3.314,465,3.314,466,3.314,467,3.72,468,3.72,469,3.314,470,3.314,471,3.314,472,3.314,473,3.72,474,2.766,475,2.766]],["title/guards/PoliciesGuard.html",[385,2.076,476,1.867]],["body/guards/PoliciesGuard.html",[3,0.398,4,0.398,5,0.268,9,0.398,10,1.262,11,2.174,14,0.033,22,0.928,24,1.262,27,2.091,28,0.689,29,0.785,40,0.398,41,0.116,42,1.294,45,2.07,50,1.318,52,0.022,53,0.022,124,0.614,171,1.161,179,1.556,180,1.017,181,1.433,185,2.794,239,2.174,240,0.659,315,2.811,320,3.222,337,3.081,364,2.07,368,2.07,376,3.081,377,2.331,378,1.862,386,4.437,387,2.681,388,4.785,390,3.642,391,4.437,393,2.681,394,2.07,402,2.681,476,2.529,477,3.212,478,2.681,479,4.363,480,3.212,481,3.212,482,4.363,483,3.212,484,4.363,485,3.167,486,2.681,487,2.681,488,3.212,489,3.212,490,3.212,491,3.212,492,3.212,493,3.212,494,3.212,495,2.331,496,3.212,497,3.212]],["title/classes/RegisterDto.html",[41,0.117,217,1.867]],["body/classes/RegisterDto.html",[3,0.406,4,0.406,5,0.273,7,0.734,9,0.406,13,2.351,14,0.033,22,1.003,28,0.548,32,1.569,40,0.406,41,0.194,47,1.882,52,0.022,53,0.022,124,0.664,130,2.073,132,2.254,143,2.568,180,1.148,199,3.689,215,2.849,217,2.562,275,1.94,304,3.243,355,1.569,432,3.889,433,2.733,435,4.35,436,2.376,438,4.061,439,3.208,440,4.185,441,2.376,442,2.11,443,3.453,444,2.376,467,3.689,468,3.689,473,3.689,474,2.733,475,2.733,498,2.733,499,3.274,500,3.274,501,3.274,502,3.274,503,3.274,504,3.274]],["title/entities/User.html",[240,0.661,505,1.867]],["body/entities/User.html",[3,0.327,4,0.327,5,0.22,7,0.591,9,0.327,13,2.435,14,0.033,22,1.039,28,0.604,40,0.327,41,0.177,47,1.845,52,0.019,53,0.019,124,0.688,130,1.915,132,2.082,134,1.998,136,1.7,143,1.822,151,1.264,153,1.062,180,1.139,213,1.529,240,1.061,257,2.14,259,1.7,273,2.203,275,1.668,302,2.342,303,2.996,304,2.996,342,2.203,423,1.914,445,3.143,447,3.234,452,3.172,505,3.121,506,2.201,507,4.028,508,5.312,509,2.637,510,2.637,511,3.172,512,3.719,513,2.637,514,2.759,515,2.637,516,2.637,517,3.801,518,3.801,519,2.201,520,3.801,521,2.637,522,2.637,523,3.801,524,3.801,525,3.801,526,3.801,527,2.637,528,3.801,529,2.637,530,3.172,531,2.759,532,3.172,533,3.172,534,2.637,535,2.637,536,3.801,537,3.801,538,2.637,539,2.637]],["title/entities/UserRoles.html",[257,1.413,505,1.867]],["body/entities/UserRoles.html",[3,0.387,4,0.387,5,0.261,7,0.7,8,3.107,9,0.387,13,2.143,14,0.032,22,0.914,28,0.605,34,1.157,35,1.065,40,0.387,41,0.177,52,0.021,53,0.021,124,0.651,136,2.013,151,1.497,236,4.386,240,1.261,257,1.878,273,2.481,275,1.878,287,3.573,302,2.567,303,2.481,327,4.595,342,3.374,343,2.267,347,3.573,505,3.295,508,4.948,512,4.077,514,3.107,519,2.607,530,3.573,531,3.107,532,3.573,533,3.573,540,4.386,541,2.607,542,3.123,543,3.123,544,5.254,545,3.386,546,3.123,547,4.28,548,3.573,549,3.107,550,3.107,551,4.28,552,3.123,553,4.28,554,4.28,555,4.28,556,3.123,557,4.28,558,2.013]],["title/controllers/UsersController.html",[0,1.544,559,2.076]],["body/controllers/UsersController.html",[0,1.799,2,0.949,3,0.245,4,0.245,5,0.165,7,1.312,9,0.245,10,0.887,11,2.349,13,1.855,14,0.033,16,3.511,18,4.157,20,3.511,21,3.511,22,0.791,24,1.507,27,2.621,28,0.663,29,0.484,30,2.559,31,3.662,32,0.949,34,0.733,35,0.675,40,0.245,41,0.072,42,0.797,43,2.007,45,1.276,46,0.949,47,1.584,48,3.118,50,1.124,52,0.015,53,0.015,124,0.465,130,2.063,134,1.612,153,0.797,179,1.327,180,0.867,181,1.222,195,1.652,213,1.777,214,2.175,222,1.437,224,1.652,226,1.566,239,0.869,240,1.305,241,1.276,291,1.976,311,1.437,339,1.652,365,1.777,378,1.147,460,2.45,463,4.037,476,1.147,487,1.652,550,3.319,558,1.276,559,1.976,560,1.652,561,1.979,562,3.753,563,3.066,564,3.066,565,3.066,566,1.979,567,1.979,568,1.979,569,3.753,570,1.979,571,3.066,572,3.066,573,2.559,574,1.979,575,3.066,576,1.979,577,4.226,578,2.559,579,3.066,580,2.559,581,3.528,582,4.037,583,1.979,584,1.979,585,4.837,586,1.979,587,2.559,588,2.226,589,1.979,590,1.979,591,1.979,592,2.559,593,2.559,594,2.559,595,1.979,596,1.652,597,1.437,598,1.979,599,1.652,600,1.979,601,1.652,602,1.652,603,1.652,604,1.979,605,1.979,606,1.979,607,1.979,608,3.753,609,1.979,610,1.979,611,1.652,612,1.652,613,1.979,614,1.979,615,1.979,616,1.979,617,1.979,618,1.979,619,1.979]],["title/modules/UsersModule.html",[54,1.298,63,1.867]],["body/modules/UsersModule.html",[2,2.27,3,0.45,4,0.45,5,0.303,14,0.033,28,0.775,29,0.888,40,0.45,41,0.132,52,0.023,53,0.023,54,1.908,56,1.742,57,2.078,63,3.555,64,2.745,65,2.106,66,1.742,68,3.053,69,2.637,76,2.637,78,2.106,226,2.2,240,0.972,257,2.078,259,2.342,263,3.033,315,2.846,382,3.053,394,2.342,476,2.745,558,2.342,559,3.397,599,3.033,603,3.033,620,3.633,621,3.633,622,3.633,623,4.736,624,3.633,625,3.633,626,3.633,627,3.633,628,3.633,629,3.633]],["title/injectables/UsersService.html",[171,0.857,226,1.193]],["body/injectables/UsersService.html",[3,0.201,4,0.201,5,0.135,7,0.587,9,0.201,10,0.757,11,2.202,14,0.033,16,1.176,21,1.176,22,0.874,24,1.553,26,1.176,27,2.768,28,0.638,29,0.396,34,0.6,35,0.552,40,0.201,41,0.059,42,1.522,43,2.202,44,1.375,46,1.254,47,1.78,49,1.899,50,1.18,52,0.013,53,0.013,78,0.939,124,0.578,130,2.2,132,2.021,134,1.986,151,0.776,153,1.522,171,0.696,172,0.776,179,1.466,180,0.997,181,1.35,185,1.375,211,2.743,213,1.517,214,2.816,217,2.404,226,0.969,239,1.82,240,1.269,241,2.436,257,1.444,259,1.044,273,2.191,291,1.687,292,1.352,302,1.73,303,1.908,311,2.389,312,1.899,313,1.352,332,1.176,342,0.939,457,2.184,458,2.184,460,2.404,507,1.899,511,1.352,514,1.899,531,1.176,545,1.044,549,1.899,550,3.388,558,1.044,573,2.184,581,3.703,582,4.482,588,1.899,592,3.154,593,2.184,594,2.748,596,1.352,601,1.352,602,1.352,612,2.184,630,1.352,631,2.616,632,2.616,633,1.62,634,5.017,635,3.291,636,1.62,637,3.291,638,2.616,639,1.62,640,2.616,641,2.616,642,1.62,643,2.616,644,2.616,645,1.62,646,2.616,647,1.62,648,4.436,649,2.616,650,1.62,651,2.616,652,1.62,653,2.616,654,2.616,655,1.62,656,1.62,657,1.62,658,1.62,659,1.62,660,1.62,661,1.62,662,1.62,663,1.62,664,1.62,665,1.62,666,1.62,667,1.62,668,1.62,669,1.62,670,1.62,671,1.62,672,1.62,673,1.352,674,1.62,675,1.62,676,2.616,677,1.352,678,1.62,679,1.62,680,1.62,681,1.62,682,1.62,683,1.62,684,1.62,685,1.62,686,1.62,687,1.62,688,1.352,689,1.62,690,1.62,691,1.62,692,2.184,693,1.62,694,1.62,695,1.62,696,1.62,697,1.62,698,1.62,699,1.62,700,1.62,701,1.176,702,1.62]],["title/coverage.html",[703,3.649]],["body/coverage.html",[0,2.221,1,1.824,5,0.236,6,2.362,14,0.032,36,1.487,38,1.824,41,0.193,52,0.02,53,0.02,124,0.351,153,1.14,171,1.466,173,2.362,192,1.824,193,1.824,194,2.362,201,1.64,217,1.64,226,1.048,228,1.487,240,0.82,250,1.64,257,1.242,274,2.362,315,1.356,316,2.054,365,1.64,366,2.576,367,2.576,369,1.64,373,1.64,382,1.824,383,2.362,384,2.362,385,1.824,396,2.054,405,2.362,431,2.362,445,1.824,446,2.362,460,1.64,461,2.362,462,2.362,476,1.64,478,2.362,485,2.054,495,2.054,498,2.362,505,2.317,506,2.362,540,2.362,541,2.362,559,1.824,560,2.362,597,2.054,630,2.362,703,2.362,704,2.83,705,2.83,706,2.362,707,5.159,708,3.336,709,6.219,710,6.031,711,6.282,712,2.83,713,5.31,714,2.362,715,3.336,716,2.362,717,5.034,718,2.83,719,2.83,720,3.336,721,4.633,722,3.336,723,3.336,724,2.83,725,2.362,726,2.901,727,2.362,728,3.855,729,2.362,730,2.362,731,5.511,732,2.362,733,2.362,734,2.362,735,2.83,736,2.83,737,2.362]],["title/dependencies.html",[57,1.697,738,2.255]],["body/dependencies.html",[5,0.281,14,0.033,29,0.824,32,1.616,41,0.164,52,0.022,53,0.022,57,1.48,72,1.954,74,2.814,75,2.814,78,1.954,79,2.814,81,2.173,82,3.274,86,2.814,87,2.814,151,1.616,254,2.447,256,2.173,266,1.954,298,2.814,325,2.814,394,2.173,418,2.814,442,2.173,447,2.447,507,2.447,739,3.372,740,6.033,741,3.372,742,4.508,743,3.372,744,3.372,745,3.372,746,3.372,747,3.372,748,3.372,749,3.372,750,3.372,751,3.372,752,4.508,753,3.763,754,3.372,755,3.372,756,3.372,757,3.372,758,3.372,759,3.372,760,3.372,761,3.372,762,3.372,763,3.372,764,5.422,765,3.372,766,3.372,767,2.814,768,3.372,769,3.372,770,3.372,771,3.372,772,3.372,773,3.372,774,3.372,775,3.372,776,3.372,777,3.372,778,3.372,779,3.372,780,3.372,781,3.372,782,3.372,783,3.372,784,3.372,785,3.372,786,3.372,787,3.372,788,3.372,789,3.372,790,3.372,791,3.372,792,3.372,793,3.372,794,3.372]],["title/miscellaneous/functions.html",[795,1.42,796,3.228]],["body/miscellaneous/functions.html",[9,0.615,14,0.028,52,0.028,53,0.028,728,3.603,729,5.053,795,2.609,796,4.143,797,4.143]],["title/index.html",[9,0.335,798,2.255,799,1.961]],["body/index.html",[5,0.263,7,0.558,8,2.916,14,0.031,35,1.076,47,0.478,48,0.982,52,0.012,53,0.012,54,1.618,57,1.385,66,1.926,81,2.349,82,1.605,95,1.272,97,2.291,99,1.272,101,1.272,103,1.272,105,1.272,107,1.272,109,1.272,111,1.272,113,1.272,118,1.272,122,3.13,124,0.308,130,0.564,132,1.003,134,2.774,141,2.635,144,2.291,151,2.275,153,0.614,174,2.635,180,0.313,181,0.441,189,3.754,192,1.605,211,1.807,212,1.272,284,1.272,285,1.807,286,1.106,294,1.272,295,2.078,296,1.272,301,2.078,312,2.916,332,2.916,345,1.272,356,1.272,414,2.078,415,1.106,443,2.349,486,1.272,545,2.589,549,2.291,580,1.272,611,3.042,677,1.272,688,1.272,692,1.272,707,2.078,726,2.916,737,1.272,767,2.078,799,1.106,800,2.489,801,1.523,802,2.489,803,3.156,804,1.523,805,1.523,806,1.523,807,2.489,808,1.523,809,2.489,810,1.523,811,1.523,812,3.156,813,1.523,814,2.489,815,4.017,816,4.311,817,3.644,818,4.549,819,2.489,820,3.156,821,2.489,822,2.489,823,3.156,824,1.523,825,4.549,826,1.523,827,2.489,828,1.523,829,1.523,830,4.311,831,1.523,832,1.523,833,1.523,834,1.523,835,3.644,836,2.489,837,5.452,838,3.644,839,3.644,840,1.523,841,2.489,842,1.523,843,1.523,844,1.523,845,4.549,846,2.489,847,2.489,848,2.489,849,3.156,850,2.489,851,1.523,852,1.523,853,1.523,854,1.523,855,1.523,856,5.051,857,3.644,858,1.523,859,1.523,860,1.523,861,1.523,862,2.489,863,1.523,864,1.523,865,1.523,866,1.523,867,1.523,868,1.272,869,2.489,870,1.523,871,1.523,872,3.156,873,3.156,874,4.746,875,1.523,876,3.644,877,1.523,878,1.523,879,3.156,880,1.523,881,1.523,882,1.523,883,1.523,884,2.489,885,1.523,886,4.746,887,1.523,888,1.523,889,1.523,890,1.523,891,1.523,892,2.489,893,1.523,894,1.523,895,1.523,896,1.523,897,1.523,898,1.523,899,1.523,900,1.523,901,3.644,902,2.078,903,1.523,904,1.523,905,2.489,906,1.523,907,1.523,908,1.523,909,1.523,910,1.523,911,1.523,912,1.523,913,1.523,914,1.523,915,2.489,916,1.523,917,1.523,918,1.523,919,1.523,920,2.489,921,1.523,922,1.523,923,1.523,924,1.272,925,3.042,926,2.489,927,2.489,928,1.523,929,1.523,930,1.523,931,1.523,932,1.272,933,1.523,934,1.523,935,2.489,936,1.523,937,1.523,938,1.523,939,2.489,940,1.523,941,1.523,942,1.523,943,3.156,944,2.635,945,1.523,946,1.523,947,1.523,948,2.489,949,2.489,950,1.523,951,1.523,952,1.523,953,1.523,954,2.489,955,1.523,956,1.523,957,1.523,958,1.523,959,1.523,960,2.489,961,1.523,962,1.523,963,1.523,964,1.523,965,1.523,966,2.489,967,1.523,968,2.489,969,1.523,970,1.523,971,1.523,972,1.523,973,1.523,974,1.523,975,1.523,976,1.523,977,2.489,978,3.644,979,1.523,980,1.523,981,1.523,982,3.156,983,3.156,984,2.489,985,1.523,986,1.523,987,1.523,988,1.523,989,1.523,990,1.523,991,1.523,992,1.523,993,1.523,994,1.523,995,1.523,996,1.523,997,1.523,998,1.523,999,1.523,1000,1.523,1001,3.156,1002,2.489,1003,1.523,1004,3.156,1005,2.489,1006,2.489,1007,2.489,1008,2.489,1009,1.523,1010,2.489,1011,2.489,1012,2.078,1013,2.489,1014,1.523,1015,1.523,1016,1.523,1017,2.078,1018,2.489,1019,1.523,1020,1.523,1021,1.523,1022,1.523,1023,1.523,1024,1.523,1025,1.523,1026,1.523,1027,1.523,1028,1.523,1029,1.523,1030,1.523,1031,1.523,1032,1.523,1033,1.523,1034,1.523,1035,1.523,1036,1.523,1037,1.523,1038,1.523,1039,1.523,1040,1.523,1041,1.523,1042,1.523,1043,1.523,1044,1.523,1045,1.523,1046,1.523,1047,1.523,1048,1.272,1049,1.523,1050,1.523,1051,1.523,1052,1.523,1053,1.523,1054,1.523,1055,1.523,1056,0.982,1057,1.106,1058,1.523,1059,1.272]],["title/license.html",[798,2.255,799,1.961,1056,1.742]],["body/license.html",[14,0.024,52,0.024,53,0.024,66,1.815,192,2.44,291,2.44,336,3.16,548,3.16,587,3.16,673,3.16,868,4.486,902,3.16,924,3.16,925,4.06,944,3.16,1012,3.16,1056,2.44,1057,3.53,1060,5.374,1061,3.786,1062,3.786,1063,3.786,1064,4.864,1065,3.786,1066,3.786,1067,3.786,1068,3.786,1069,3.786,1070,3.786,1071,4.864,1072,6.247,1073,3.786,1074,3.786,1075,3.786,1076,4.864,1077,3.786,1078,3.786,1079,3.786,1080,3.786,1081,3.786,1082,3.786,1083,3.786,1084,3.786,1085,3.786,1086,4.864,1087,3.786,1088,3.786,1089,3.786,1090,3.786,1091,4.864,1092,4.864,1093,3.786,1094,3.786,1095,3.786,1096,3.786,1097,3.786,1098,3.786,1099,3.786,1100,3.786,1101,3.786,1102,3.786,1103,3.786,1104,3.786,1105,3.786,1106,3.786,1107,3.786,1108,3.786,1109,3.786,1110,3.786,1111,3.786,1112,3.786,1113,3.786,1114,3.786,1115,3.786,1116,3.786,1117,3.786]],["title/modules.html",[56,2.095]],["body/modules.html",[14,0.028,52,0.028,53,0.028,55,3.054,56,2.271,61,2.746,62,2.746,63,2.746,753,5.119,1048,5.119,1118,6.133,1119,6.133]],["title/overview.html",[1120,3.649]],["body/overview.html",[2,1.751,14,0.032,36,2.777,52,0.023,53,0.023,55,4.036,56,1.751,57,2.086,58,3.049,59,3.049,60,3.049,61,3.656,62,3.447,63,3.51,64,2.755,65,2.118,66,1.751,136,2.355,172,1.751,226,2.073,228,3.183,247,3.049,248,3.049,249,3.049,250,3.51,315,2.943,355,1.751,360,3.049,361,3.049,362,3.049,373,2.118,385,2.355,701,3.45,1120,3.049,1121,3.653,1122,3.653,1123,3.653,1124,3.653,1125,3.653]],["title/properties.html",[275,1.697,738,2.255]],["body/properties.html",[14,0.031,52,0.028,53,0.028,275,2.154,1056,3.164,1057,3.563,1059,4.098,1126,4.098,1127,4.909,1128,4.909,1129,4.909]],["title/miscellaneous/typealiases.html",[795,1.42,1130,3.867]],["body/miscellaneous/typealiases.html",[9,0.573,14,0.03,52,0.027,53,0.027,124,0.573,316,3.357,320,2.681,324,3.86,330,4.595,337,3.191,366,2.981,367,3.789,369,2.681,375,4.267,376,3.191,495,3.357,795,2.431,1131,4.625,1132,5.505,1133,5.505]],["title/miscellaneous/variables.html",[795,1.42,1134,3.228]],["body/miscellaneous/variables.html",[7,0.921,9,0.364,14,0.033,38,2.646,47,1.752,52,0.02,53,0.02,97,2.98,122,2.134,124,0.745,143,1.968,153,1.654,180,0.603,189,4.05,191,2.454,240,1.105,257,1.802,302,2.486,303,1.704,304,1.704,342,2.38,343,2.98,376,1.704,378,2.38,396,2.98,400,2.454,415,2.98,423,2.134,453,5.19,485,2.98,545,4.008,578,2.454,588,2.134,597,2.98,701,3.716,706,2.454,708,4.274,714,2.454,715,2.454,716,3.427,720,2.454,722,2.454,723,3.949,725,2.454,726,3.716,727,2.454,728,2.134,730,3.427,732,3.427,733,3.427,734,3.427,795,1.545,797,4.274,932,2.454,1017,2.454,1126,2.454,1134,2.454,1135,4.105,1136,2.94,1137,2.94,1138,4.105,1139,2.94,1140,2.94,1141,4.105,1142,2.94,1143,2.94,1144,2.94,1145,4.105,1146,2.94,1147,2.94,1148,2.94,1149,2.94,1150,2.94]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"modules/CaslModule.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PasswordTransformer.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":709,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":1127,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":785,"title":{},"body":{"dependencies.html":{}}}],["0.11.4",{"_index":794,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":775,"title":{},"body":{"dependencies.html":{}}}],["0.3.7",{"_index":790,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":774,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":710,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":721,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":724,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":701,"title":{},"body":{"injectables/UsersService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.0",{"_index":1146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.7.0",{"_index":781,"title":{},"body":{"dependencies.html":{}}}],["1.8.2",{"_index":776,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":731,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":719,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":711,"title":{},"body":{"coverage.html":{}}}],["14.0.0",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["14.1.1",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["14.2.0",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["14.5.10",{"_index":773,"title":{},"body":{"dependencies.html":{}}}],["14d",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["16",{"_index":840,"title":{},"body":{"index.html":{}}}],["17.6.0",{"_index":777,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":1123,"title":{},"body":{"overview.html":{}}}],["2.2.0",{"_index":765,"title":{},"body":{"dependencies.html":{}}}],["2.29.4",{"_index":778,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":789,"title":{},"body":{"dependencies.html":{}}}],["2.3.3",{"_index":780,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":712,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["201",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{}}}],["2018",{"_index":1062,"title":{},"body":{"license.html":{}}}],["20m",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["2400",{"_index":921,"title":{},"body":{"index.html":{}}}],["255",{"_index":518,"title":{},"body":{"entities/User.html":{}}}],["3",{"_index":1122,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["3.8.1",{"_index":791,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":713,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":718,"title":{},"body":{"coverage.html":{}}}],["365",{"_index":992,"title":{},"body":{"index.html":{}}}],["4",{"_index":1121,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["4.7.1",{"_index":792,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":922,"title":{},"body":{"index.html":{}}}],["400",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["401",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{}}}],["404",{"_index":689,"title":{},"body":{"injectables/UsersService.html":{}}}],["5",{"_index":1125,"title":{},"body":{"overview.html":{}}}],["5/5",{"_index":717,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1124,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":756,"title":{},"body":{"dependencies.html":{}}}],["6.0.5",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["6.5.0",{"_index":763,"title":{},"body":{"dependencies.html":{}}}],["7.3.0",{"_index":761,"title":{},"body":{"dependencies.html":{}}}],["7.5.0",{"_index":787,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":735,"title":{},"body":{"coverage.html":{}}}],["9.0.0",{"_index":764,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["9.0.11",{"_index":768,"title":{},"body":{"dependencies.html":{}}}],["9.1.0",{"_index":758,"title":{},"body":{"dependencies.html":{}}}],["__dirname",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["ability",{"_index":320,"title":{},"body":{"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"miscellaneous/typealiases.html":{}}}],["ability.can(useractionsenum.delete",{"_index":379,"title":{},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{}}}],["abilitybuilder",{"_index":321,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["abilityclass",{"_index":322,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["above",{"_index":1090,"title":{},"body":{"license.html":{}}}],["abstraction",{"_index":1031,"title":{},"body":{"index.html":{}}}],["access",{"_index":347,"title":{},"body":{"injectables/CaslFactory.html":{},"entities/UserRoles.html":{}}}],["accessed",{"_index":894,"title":{},"body":{"index.html":{}}}],["accessible",{"_index":947,"title":{},"body":{"index.html":{}}}],["account",{"_index":672,"title":{},"body":{"injectables/UsersService.html":{}}}],["action",{"_index":1112,"title":{},"body":{"license.html":{}}}],["acts",{"_index":1030,"title":{},"body":{"index.html":{}}}],["actual",{"_index":937,"title":{},"body":{"index.html":{}}}],["adapter",{"_index":945,"title":{},"body":{"index.html":{}}}],["add(this.expiration",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["again",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["against",{"_index":927,"title":{},"body":{"index.html":{}}}],["aliases",{"_index":1131,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alphanumeric",{"_index":919,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1084,"title":{},"body":{"license.html":{}}}],["angular",{"_index":812,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["angular/flex",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["another",{"_index":676,"title":{},"body":{"injectables/UsersService.html":{}}}],["anvarov",{"_index":1129,"title":{},"body":{"properties.html":{}}}],["anything",{"_index":956,"title":{},"body":{"index.html":{}}}],["api",{"_index":189,"title":{},"body":{"injectables/AppService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["api/v1/docs",{"_index":191,"title":{},"body":{"injectables/AppService.html":{},"miscellaneous/variables.html":{}}}],["apibearerauth",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["apiproperty",{"_index":438,"title":{},"body":{"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["apiproperty()@isemail()@isnotempty",{"_index":464,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["apiproperty()@isnotempty()@minlength(8",{"_index":470,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["apiproperty()@matches(/^[a",{"_index":466,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["apiproperty({required",{"_index":432,"title":{},"body":{"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["apiresponse",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["apis",{"_index":1023,"title":{},"body":{"index.html":{}}}],["apitags",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["apitags('authentication",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('users",{"_index":604,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"entities/UserRoles.html":{},"index.html":{}}}],["app.controller",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app](https://github.com/gothinkster/realworld",{"_index":1047,"title":{},"body":{"index.html":{}}}],["app_env",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["app_guard",{"_index":623,"title":{},"body":{"modules/UsersModule.html":{}}}],["appability",{"_index":337,"title":{},"body":{"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"miscellaneous/typealiases.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":174,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["applications",{"_index":809,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":55,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appreciated",{"_index":1050,"title":{},"body":{"index.html":{}}}],["apps/.../app.controller.test.ts",{"_index":1139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../auth.controller.test.ts",{"_index":1140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../auth.service.test.ts",{"_index":1141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../casl.factory.ts",{"_index":1132,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../check",{"_index":1135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.prod.ts",{"_index":1136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":1137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":797,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../policy",{"_index":1133,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../public.decorator.ts",{"_index":1138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/api/src/app.controller.test.ts",{"_index":706,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["apps/api/src/app.controller.ts:29",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/api/src/app.module.ts",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["apps/api/src/app.service.ts",{"_index":173,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["apps/api/src/app.service.ts:11",{"_index":178,"title":{},"body":{"injectables/AppService.html":{}}}],["apps/api/src/app.service.ts:24",{"_index":182,"title":{},"body":{"injectables/AppService.html":{}}}],["apps/api/src/auth/auth.controller.test.ts",{"_index":714,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/auth/auth.controller.ts",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["apps/api/src/auth/auth.controller.ts:37",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{}}}],["apps/api/src/auth/auth.controller.ts:51",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{}}}],["apps/api/src/auth/auth.module.ts",{"_index":251,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/api/src/auth/auth.service.test.ts",{"_index":715,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/auth/auth.service.ts",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["apps/api/src/auth/auth.service.ts:21",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/api/src/auth/auth.service.ts:41",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/api/src/auth/auth.service.ts:68",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/api/src/auth/dto/login.dto.ts",{"_index":431,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["apps/api/src/auth/dto/login.dto.ts:16",{"_index":437,"title":{},"body":{"classes/LoginDto.html":{}}}],["apps/api/src/auth/dto/login.dto.ts:26",{"_index":434,"title":{},"body":{"classes/LoginDto.html":{}}}],["apps/api/src/auth/dto/register.dto.ts",{"_index":498,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["apps/api/src/auth/dto/register.dto.ts:22",{"_index":500,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apps/api/src/auth/dto/register.dto.ts:32",{"_index":504,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apps/api/src/auth/dto/register.dto.ts:42",{"_index":502,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apps/api/src/auth/dto/register.dto.ts:52",{"_index":503,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apps/api/src/auth/jwt",{"_index":383,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["apps/api/src/auth/jwt.strategy.ts",{"_index":405,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["apps/api/src/auth/jwt.strategy.ts:13",{"_index":408,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/api/src/auth/jwt.strategy.ts:35",{"_index":411,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/api/src/auth/public.decorator.ts",{"_index":720,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/casl/casl.factory.ts",{"_index":316,"title":{},"body":{"injectables/CaslFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/api/src/casl/casl.factory.ts:21",{"_index":319,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["apps/api/src/casl/casl.module.ts",{"_index":363,"title":{},"body":{"modules/CaslModule.html":{}}}],["apps/api/src/casl/check",{"_index":722,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/casl/policies.guard.ts",{"_index":478,"title":{},"body":{"guards/PoliciesGuard.html":{},"coverage.html":{}}}],["apps/api/src/casl/policies.guard.ts:12",{"_index":481,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["apps/api/src/casl/policies.guard.ts:27",{"_index":483,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["apps/api/src/casl/policies.guard.ts:9",{"_index":480,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["apps/api/src/casl/policy",{"_index":366,"title":{},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/api/src/environments/environment.prod.ts",{"_index":725,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/environments/environment.ts",{"_index":727,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/main.ts",{"_index":728,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/users/dto/patch",{"_index":461,"title":{},"body":{"classes/PatchUserDto.html":{},"coverage.html":{}}}],["apps/api/src/users/password.transformer.ts",{"_index":446,"title":{},"body":{"classes/PasswordTransformer.html":{},"coverage.html":{}}}],["apps/api/src/users/password.transformer.ts:12",{"_index":455,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["apps/api/src/users/password.transformer.ts:20",{"_index":450,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["apps/api/src/users/user",{"_index":540,"title":{},"body":{"entities/UserRoles.html":{},"coverage.html":{}}}],["apps/api/src/users/user.entity.ts",{"_index":506,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["apps/api/src/users/user.entity.ts:18",{"_index":513,"title":{},"body":{"entities/User.html":{}}}],["apps/api/src/users/user.entity.ts:24",{"_index":535,"title":{},"body":{"entities/User.html":{}}}],["apps/api/src/users/user.entity.ts:30",{"_index":515,"title":{},"body":{"entities/User.html":{}}}],["apps/api/src/users/user.entity.ts:36",{"_index":509,"title":{},"body":{"entities/User.html":{}}}],["apps/api/src/users/user.entity.ts:42",{"_index":510,"title":{},"body":{"entities/User.html":{}}}],["apps/api/src/users/user.entity.ts:48",{"_index":529,"title":{},"body":{"entities/User.html":{}}}],["apps/api/src/users/user.entity.ts:60",{"_index":522,"title":{},"body":{"entities/User.html":{}}}],["apps/api/src/users/users.controller.ts",{"_index":560,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["apps/api/src/users/users.controller.ts:41",{"_index":576,"title":{},"body":{"controllers/UsersController.html":{}}}],["apps/api/src/users/users.controller.ts:53",{"_index":586,"title":{},"body":{"controllers/UsersController.html":{}}}],["apps/api/src/users/users.controller.ts:71",{"_index":591,"title":{},"body":{"controllers/UsersController.html":{}}}],["apps/api/src/users/users.controller.ts:85",{"_index":570,"title":{},"body":{"controllers/UsersController.html":{}}}],["apps/api/src/users/users.module.ts",{"_index":622,"title":{},"body":{"modules/UsersModule.html":{}}}],["apps/api/src/users/users.service.ts",{"_index":630,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["apps/api/src/users/users.service.ts:108",{"_index":645,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/users/users.service.ts:131",{"_index":642,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/users/users.service.ts:22",{"_index":636,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/users/users.service.ts:40",{"_index":647,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/users/users.service.ts:49",{"_index":650,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/users/users.service.ts:59",{"_index":652,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/users/users.service.ts:76",{"_index":639,"title":{},"body":{"injectables/UsersService.html":{}}}],["appservice",{"_index":36,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["appservice.name",{"_index":188,"title":{},"body":{"injectables/AppService.html":{}}}],["apt",{"_index":848,"title":{},"body":{"index.html":{}}}],["arising",{"_index":1116,"title":{},"body":{"license.html":{}}}],["associated",{"_index":1073,"title":{},"body":{"license.html":{}}}],["async",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["auth.controller",{"_index":261,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":625,"title":{},"body":{"modules/UsersModule.html":{}}}],["auth.guard.ts",{"_index":384,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:11",{"_index":389,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:16",{"_index":392,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/dto/register.dto",{"_index":656,"title":{},"body":{"injectables/UsersService.html":{}}}],["auth/jwt",{"_index":624,"title":{},"body":{"modules/UsersModule.html":{}}}],["auth/public.decorator",{"_index":39,"title":{},"body":{"controllers/AppController.html":{}}}],["authcontroller",{"_index":193,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticated",{"_index":579,"title":{},"body":{"controllers/UsersController.html":{}}}],["authenticating",{"_index":926,"title":{},"body":{"index.html":{}}}],["authentication",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{}}}],["authentication/authorization",{"_index":831,"title":{},"body":{"index.html":{}}}],["authguard",{"_index":395,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":398,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":61,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1059,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authors",{"_index":1106,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":228,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoloadentities",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["automatically",{"_index":899,"title":{},"body":{"index.html":{}}}],["await",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["backend",{"_index":829,"title":{},"body":{"index.html":{}}}],["bad",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["badrequestexception",{"_index":594,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["based",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"entities/UserRoles.html":{}}}],["bearer",{"_index":413,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["before",{"_index":525,"title":{},"body":{"entities/User.html":{}}}],["behind",{"_index":910,"title":{},"body":{"index.html":{}}}],["below",{"_index":866,"title":{},"body":{"index.html":{}}}],["benefits",{"_index":942,"title":{},"body":{"index.html":{}}}],["beta.40",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["beware",{"_index":547,"title":{},"body":{"entities/UserRoles.html":{}}}],["body",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["boilerplate",{"_index":825,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":374,"title":{},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{}}}],["bootstrap",{"_index":729,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["box",{"_index":835,"title":{},"body":{"index.html":{}}}],["branch",{"_index":948,"title":{},"body":{"index.html":{}}}],["branches",{"_index":1039,"title":{},"body":{"index.html":{}}}],["brew",{"_index":846,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1119,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":753,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["build",{"_index":340,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["building",{"_index":804,"title":{},"body":{"index.html":{}}}],["built",{"_index":893,"title":{},"body":{"index.html":{}}}],["c",{"_index":1061,"title":{},"body":{"license.html":{}}}],["can(useractionsenum.manage",{"_index":344,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["can(useractionsenum.read",{"_index":349,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["can(useractionsenum.update",{"_index":350,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["canactivate",{"_index":386,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{}}}],["canactivate(context",{"_index":390,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{}}}],["capability",{"_index":979,"title":{},"body":{"index.html":{}}}],["cascade",{"_index":555,"title":{},"body":{"entities/UserRoles.html":{}}}],["casl",{"_index":329,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["casl.factory",{"_index":364,"title":{},"body":{"modules/CaslModule.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{}}}],["casl/ability",{"_index":325,"title":{},"body":{"injectables/CaslFactory.html":{},"dependencies.html":{}}}],["casl/casl.factory",{"_index":626,"title":{},"body":{"modules/UsersModule.html":{}}}],["casl/casl.module",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["casl/check",{"_index":598,"title":{},"body":{"controllers/UsersController.html":{}}}],["casl/policies.guard",{"_index":599,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["casl/policy",{"_index":600,"title":{},"body":{"controllers/UsersController.html":{}}}],["caslfactory",{"_index":315,"title":{"injectables/CaslFactory.html":{}},"body":{"injectables/CaslFactory.html":{},"modules/CaslModule.html":{},"guards/PoliciesGuard.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["caslmodule",{"_index":62,"title":{"modules/CaslModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CaslModule.html":{},"modules.html":{},"overview.html":{}}}],["cert.pem",{"_index":990,"title":{},"body":{"index.html":{}}}],["certificate",{"_index":978,"title":{},"body":{"index.html":{}}}],["certs",{"_index":981,"title":{},"body":{"index.html":{}}}],["change",{"_index":957,"title":{},"body":{"index.html":{}}}],["charge",{"_index":1068,"title":{},"body":{"license.html":{}}}],["check",{"_index":486,"title":{},"body":{"guards/PoliciesGuard.html":{},"index.html":{}}}],["check_policies_key",{"_index":485,"title":{},"body":{"guards/PoliciesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["check_policy",{"_index":1142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["checkpolicies",{"_index":597,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["checkpolicies(new",{"_index":617,"title":{},"body":{"controllers/UsersController.html":{}}}],["checks",{"_index":412,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["choco",{"_index":847,"title":{},"body":{"index.html":{}}}],["choice",{"_index":950,"title":{},"body":{"index.html":{}}}],["choose",{"_index":675,"title":{},"body":{"injectables/UsersService.html":{}}}],["choosing",{"_index":817,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1109,"title":{},"body":{"license.html":{}}}],["class",{"_index":41,"title":{"classes/DeleteUserPolicyHandler.html":{},"classes/LoginDto.html":{},"classes/PasswordTransformer.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"modules/CaslModule.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PasswordTransformer.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":355,"title":{},"body":{"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"classes/LoginDto.html":{},"classes/PasswordTransformer.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{},"overview.html":{}}}],["clone",{"_index":869,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":247,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":248,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":249,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_caslmodule",{"_index":360,"title":{},"body":{"modules/CaslModule.html":{},"overview.html":{}}}],["cluster_caslmodule_exports",{"_index":362,"title":{},"body":{"modules/CaslModule.html":{},"overview.html":{}}}],["cluster_caslmodule_providers",{"_index":361,"title":{},"body":{"modules/CaslModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":620,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":621,"title":{},"body":{"modules/UsersModule.html":{}}}],["code",{"_index":1016,"title":{},"body":{"index.html":{}}}],["column",{"_index":508,"title":{},"body":{"entities/User.html":{},"entities/UserRoles.html":{}}}],["column({name",{"_index":516,"title":{},"body":{"entities/User.html":{}}}],["column({type",{"_index":543,"title":{},"body":{"entities/UserRoles.html":{}}}],["column({unique",{"_index":534,"title":{},"body":{"entities/User.html":{}}}],["comes",{"_index":830,"title":{},"body":{"index.html":{}}}],["coming",{"_index":338,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["command",{"_index":879,"title":{},"body":{"index.html":{}}}],["completed",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/UsersService.html":{}}}],["completed'})@apiresponse({status",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["compose",{"_index":862,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1089,"title":{},"body":{"license.html":{}}}],["config",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["config.get('app_env",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('app_env",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_database",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_host",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_password",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_port",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_type",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('db_username",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('webtoken_encryption_key",{"_index":269,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('webtoken_expiration_time",{"_index":271,"title":{},"body":{"modules/AuthModule.html":{}}}],["configuration",{"_index":816,"title":{},"body":{"index.html":{}}}],["configurations",{"_index":1037,"title":{},"body":{"index.html":{}}}],["conflict",{"_index":889,"title":{},"body":{"index.html":{}}}],["connection",{"_index":924,"title":{},"body":{"index.html":{},"license.html":{}}}],["connections",{"_index":936,"title":{},"body":{"index.html":{}}}],["const",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(configservice",{"_index":407,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(jwtservice",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(logger",{"_index":176,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor(private",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{}}}],["constructor(reflector",{"_index":387,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{}}}],["constructor(userrepository",{"_index":633,"title":{},"body":{"injectables/UsersService.html":{}}}],["container",{"_index":905,"title":{},"body":{"index.html":{}}}],["contents",{"_index":813,"title":{},"body":{"index.html":{}}}],["context",{"_index":393,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{}}}],["context.getclass",{"_index":403,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":402,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":490,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["contract",{"_index":1113,"title":{},"body":{"license.html":{}}}],["control",{"_index":853,"title":{},"body":{"index.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('v1/auth",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('v1/users",{"_index":605,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["copies",{"_index":1086,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1071,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1060,"title":{},"body":{"license.html":{}}}],["corresponding",{"_index":958,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":703,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cp",{"_index":877,"title":{},"body":{"index.html":{}}}],["create",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["create(payload",{"_index":638,"title":{},"body":{"injectables/UsersService.html":{}}}],["created",{"_index":549,"title":{},"body":{"entities/UserRoles.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["createforuser",{"_index":317,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["createforuser(user",{"_index":318,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["createquerybuilder('users",{"_index":664,"title":{},"body":{"injectables/UsersService.html":{}}}],["creates",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["createtoken",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["createtoken(undefined",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["creating",{"_index":328,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["crud",{"_index":832,"title":{},"body":{"index.html":{}}}],["crypto",{"_index":457,"title":{},"body":{"classes/PasswordTransformer.html":{},"injectables/UsersService.html":{}}}],["crypto.createhmac('sha256",{"_index":458,"title":{},"body":{"classes/PasswordTransformer.html":{},"injectables/UsersService.html":{}}}],["current",{"_index":578,"title":{},"body":{"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["currently",{"_index":674,"title":{},"body":{"injectables/UsersService.html":{}}}],["d",{"_index":688,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["daily",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["damages",{"_index":1110,"title":{},"body":{"license.html":{}}}],["data",{"_index":582,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["database",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["databases",{"_index":1033,"title":{},"body":{"index.html":{}}}],["date%.log",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["datepattern",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["days",{"_index":991,"title":{},"body":{"index.html":{}}}],["db_database",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["db_host",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["db_password",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["db_port",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["db_type",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["db_username",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["dd",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["deal",{"_index":1074,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1117,"title":{},"body":{"license.html":{}}}],["decorators",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"controllers/UsersController.html":{}}}],["dedicated",{"_index":1025,"title":{},"body":{"index.html":{}}}],["default",{"_index":545,"title":{},"body":{"entities/UserRoles.html":{},"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["defaultmeta",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["defaultstrategy",{"_index":265,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PasswordTransformer.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":550,"title":{},"body":{"entities/UserRoles.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete(':username",{"_index":615,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':username')@useguards(policiesguard)@checkpolicies(new",{"_index":567,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(username",{"_index":641,"title":{},"body":{"injectables/UsersService.html":{}}}],["deleted",{"_index":573,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleted.affected",{"_index":700,"title":{},"body":{"injectables/UsersService.html":{}}}],["deleteuserbyusername",{"_index":562,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteuserbyusername(username",{"_index":566,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteuserpolicyhandler",{"_index":365,"title":{"classes/DeleteUserPolicyHandler.html":{}},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["deleteuserpolicyhandler())@apiresponse({status",{"_index":568,"title":{},"body":{"controllers/UsersController.html":{}}}],["demand",{"_index":1005,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":57,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deployed",{"_index":909,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":850,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":815,"title":{},"body":{"index.html":{}}}],["describe",{"_index":1021,"title":{},"body":{"index.html":{}}}],["description",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PasswordTransformer.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["desktop",{"_index":860,"title":{},"body":{"index.html":{}}}],["detached",{"_index":906,"title":{},"body":{"index.html":{}}}],["details",{"_index":356,"title":{},"body":{"injectables/CaslFactory.html":{},"index.html":{}}}],["detection#use",{"_index":354,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["detectsubjecttype",{"_index":357,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["determines",{"_index":914,"title":{},"body":{"index.html":{}}}],["developers",{"_index":1055,"title":{},"body":{"index.html":{}}}],["development",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["different",{"_index":935,"title":{},"body":{"index.html":{}}}],["directory",{"_index":903,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":1082,"title":{},"body":{"license.html":{}}}],["docker",{"_index":837,"title":{},"body":{"index.html":{}}}],["docs",{"_index":1004,"title":{},"body":{"index.html":{}}}],["docs/api",{"_index":1009,"title":{},"body":{"index.html":{}}}],["docs/ui",{"_index":1015,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":192,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["download",{"_index":873,"title":{},"body":{"index.html":{}}}],["downloaded",{"_index":858,"title":{},"body":{"index.html":{}}}],["downloading",{"_index":842,"title":{},"body":{"index.html":{}}}],["dto",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["dto/login.dto",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/patch",{"_index":601,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/register.dto",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{}}}],["dynamic",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["edit",{"_index":592,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["edit(payload",{"_index":644,"title":{},"body":{"injectables/UsersService.html":{}}}],["efficient",{"_index":805,"title":{},"body":{"index.html":{}}}],["email",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["employed",{"_index":1043,"title":{},"body":{"index.html":{}}}],["employing",{"_index":995,"title":{},"body":{"index.html":{}}}],["employs",{"_index":523,"title":{},"body":{"entities/User.html":{}}}],["empty",{"_index":929,"title":{},"body":{"index.html":{}}}],["enable",{"_index":970,"title":{},"body":{"index.html":{}}}],["encrypt/decrypt",{"_index":917,"title":{},"body":{"index.html":{}}}],["end",{"_index":1011,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":932,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["entities",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"overview.html":{}}}],["entity",{"_index":505,"title":{"entities/User.html":{},"entities/UserRoles.html":{}},"body":{"entities/User.html":{},"entities/UserRoles.html":{},"coverage.html":{}}}],["entity{.ts,.js",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["enum",{"_index":544,"title":{},"body":{"entities/UserRoles.html":{}}}],["env",{"_index":876,"title":{},"body":{"index.html":{}}}],["env.example",{"_index":878,"title":{},"body":{"index.html":{}}}],["environment",{"_index":726,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["event",{"_index":1105,"title":{},"body":{"license.html":{}}}],["everything",{"_index":348,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["example",{"_index":1046,"title":{},"body":{"index.html":{}}}],["exclude",{"_index":536,"title":{},"body":{"entities/User.html":{}}}],["exec",{"_index":1000,"title":{},"body":{"index.html":{}}}],["execpolicyhandler",{"_index":479,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["execpolicyhandler(handler",{"_index":482,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["execute",{"_index":901,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":391,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{}}}],["exist",{"_index":697,"title":{},"body":{"injectables/UsersService.html":{}}}],["existing",{"_index":881,"title":{},"body":{"index.html":{}}}],["exists",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["exp",{"_index":429,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["expiration",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["expirationformatted",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["expire",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["expiresin",{"_index":272,"title":{},"body":{"modules/AuthModule.html":{}}}],["explicitly",{"_index":934,"title":{},"body":{"index.html":{}}}],["export",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"modules/CaslModule.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PasswordTransformer.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":252,"title":{},"body":{"modules/AuthModule.html":{},"modules/CaslModule.html":{}}}],["exposed",{"_index":887,"title":{},"body":{"index.html":{}}}],["express",{"_index":944,"title":{},"body":{"index.html":{},"license.html":{}}}],["extends",{"_index":397,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["extensive",{"_index":1036,"title":{},"body":{"index.html":{}}}],["extractjwt",{"_index":417,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":421,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractsubjecttype",{"_index":323,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["failed",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["false",{"_index":423,"title":{},"body":{"injectables/JwtStrategy.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["false})@exclude",{"_index":521,"title":{},"body":{"entities/User.html":{}}}],["fastify",{"_index":767,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["fastify/helmet",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["fastify/rate",{"_index":759,"title":{},"body":{"dependencies.html":{}}}],["fastify/static",{"_index":762,"title":{},"body":{"dependencies.html":{}}}],["feat",{"_index":1041,"title":{},"body":{"index.html":{}}}],["feat/http2",{"_index":976,"title":{},"body":{"index.html":{}}}],["feature",{"_index":964,"title":{},"body":{"index.html":{}}}],["features",{"_index":833,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":585,"title":{},"body":{"controllers/UsersController.html":{}}}],["fetches",{"_index":648,"title":{},"body":{"injectables/UsersService.html":{}}}],["field",{"_index":435,"title":{},"body":{"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["fields",{"_index":640,"title":{},"body":{"injectables/UsersService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"modules/CaslModule.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PasswordTransformer.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["filename",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["files",{"_index":1012,"title":{},"body":{"index.html":{},"license.html":{}}}],["fitness",{"_index":1102,"title":{},"body":{"license.html":{}}}],["folder",{"_index":982,"title":{},"body":{"index.html":{}}}],["follow",{"_index":863,"title":{},"body":{"index.html":{}}}],["following",{"_index":902,"title":{},"body":{"index.html":{},"license.html":{}}}],["format",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["format('lll",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["found",{"_index":611,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["framework",{"_index":803,"title":{},"body":{"index.html":{}}}],["free",{"_index":1067,"title":{},"body":{"license.html":{}}}],["from(value",{"_index":449,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["front",{"_index":1010,"title":{},"body":{"index.html":{}}}],["fully",{"_index":1051,"title":{},"body":{"index.html":{}}}],["function",{"_index":495,"title":{},"body":{"guards/PoliciesGuard.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":796,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1088,"title":{},"body":{"license.html":{}}}],["further",{"_index":1035,"title":{},"body":{"index.html":{}}}],["generate",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["generated",{"_index":983,"title":{},"body":{"index.html":{}}}],["get(':username",{"_index":607,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(':username')@apiresponse({status",{"_index":584,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('user",{"_index":575,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(id",{"_index":646,"title":{},"body":{"injectables/UsersService.html":{}}}],["getbyusername",{"_index":631,"title":{},"body":{"injectables/UsersService.html":{}}}],["getbyusername(username",{"_index":649,"title":{},"body":{"injectables/UsersService.html":{}}}],["getbyusernameandpass",{"_index":632,"title":{},"body":{"injectables/UsersService.html":{}}}],["getbyusernameandpass(username",{"_index":651,"title":{},"body":{"injectables/UsersService.html":{}}}],["getone",{"_index":670,"title":{},"body":{"injectables/UsersService.html":{}}}],["getstartingmessage",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":798,"title":{"index.html":{},"license.html":{}},"body":{}}],["getuser",{"_index":563,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuser(@request",{"_index":606,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuser(req",{"_index":574,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserbyusername",{"_index":564,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserbyusername(@param('username",{"_index":609,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserbyusername(username",{"_index":583,"title":{},"body":{"controllers/UsersController.html":{}}}],["git",{"_index":870,"title":{},"body":{"index.html":{}}}],["github",{"_index":1002,"title":{},"body":{"index.html":{}}}],["given",{"_index":588,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["grabs",{"_index":451,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["granted",{"_index":1066,"title":{},"body":{"license.html":{}}}],["gravatar",{"_index":507,"title":{},"body":{"entities/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["guard",{"_index":385,"title":{"guards/PoliciesGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guards",{"_index":477,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["h2",{"_index":972,"title":{},"body":{"index.html":{}}}],["h2c",{"_index":974,"title":{},"body":{"index.html":{}}}],["handle",{"_index":370,"title":{},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{}}}],["handle(ability",{"_index":371,"title":{},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{}}}],["handler",{"_index":484,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["handler(ability",{"_index":496,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["handler.handle(ability",{"_index":497,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["handlers",{"_index":378,"title":{},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["handlers.ts",{"_index":367,"title":{},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["handlers.ts:17",{"_index":372,"title":{},"body":{"classes/DeleteUserPolicyHandler.html":{}}}],["handlers.ts:7",{"_index":381,"title":{},"body":{"interfaces/IPolicyHandler.html":{}}}],["hash",{"_index":452,"title":{},"body":{"classes/PasswordTransformer.html":{},"entities/User.html":{}}}],["hashed",{"_index":653,"title":{},"body":{"injectables/UsersService.html":{}}}],["heavily",{"_index":810,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":1065,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1107,"title":{},"body":{"license.html":{}}}],["host",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["hosting",{"_index":1013,"title":{},"body":{"index.html":{}}}],["http",{"_index":684,"title":{},"body":{"injectables/UsersService.html":{}}}],["http/2",{"_index":968,"title":{},"body":{"index.html":{}}}],["http2",{"_index":819,"title":{},"body":{"index.html":{}}}],["http://localhost:3333",{"_index":888,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":895,"title":{},"body":{"index.html":{}}}],["http://localhost:80",{"_index":908,"title":{},"body":{"index.html":{}}}],["https",{"_index":971,"title":{},"body":{"index.html":{}}}],["https://casl.js.org/v5/en/guide/subject",{"_index":353,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["https://github.com/msanvarov/nest",{"_index":871,"title":{},"body":{"index.html":{}}}],["https://typeorm.io",{"_index":962,"title":{},"body":{"index.html":{}}}],["iat",{"_index":428,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["id",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":704,"title":{},"body":{"coverage.html":{}}}],["igenericmessagebody",{"_index":596,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["ignoreexpiration",{"_index":422,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ijwtresponsebody",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["imessage",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["implements",{"_index":368,"title":{},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"classes/PasswordTransformer.html":{},"guards/PoliciesGuard.html":{}}}],["implied",{"_index":1098,"title":{},"body":{"license.html":{}}}],["import",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"modules/CaslModule.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PasswordTransformer.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["included",{"_index":1093,"title":{},"body":{"license.html":{}}}],["including",{"_index":1076,"title":{},"body":{"license.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PasswordTransformer.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["infersubjects",{"_index":324,"title":{},"body":{"injectables/CaslFactory.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"modules/CaslModule.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PasswordTransformer.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inject",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{}}}],["inject(winston_module_provider",{"_index":184,"title":{},"body":{"injectables/AppService.html":{}}}],["injectable",{"_index":171,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/PoliciesGuard.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":172,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":655,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectrepository(user",{"_index":658,"title":{},"body":{"injectables/UsersService.html":{}}}],["injectrepository(userroles",{"_index":659,"title":{},"body":{"injectables/UsersService.html":{}}}],["inspired",{"_index":811,"title":{},"body":{"index.html":{}}}],["interface",{"_index":373,"title":{"interfaces/IPolicyHandler.html":{}},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":380,"title":{},"body":{"interfaces/IPolicyHandler.html":{}}}],["ipolicyhandler",{"_index":369,"title":{"interfaces/IPolicyHandler.html":{}},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["is_public_key",{"_index":396,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isalphanumeric",{"_index":439,"title":{},"body":{"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["isemail",{"_index":473,"title":{},"body":{"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty",{"_index":440,"title":{},"body":{"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["ispublic",{"_index":400,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["it's",{"_index":920,"title":{},"body":{"index.html":{}}}],["item",{"_index":358,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["item.constructor",{"_index":359,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["javascript",{"_index":843,"title":{},"body":{"index.html":{}}}],["joi",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["joi.number().default('3306",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.number().default(1800",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.object",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().allow('').default",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default('localhost",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default('mariadb",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default('nest",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().default('root",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().required",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["join(__dirname",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["jwt",{"_index":266,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":262,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":382,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":420,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":253,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":267,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayload",{"_index":425,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtservice",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":250,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["keepconnectionalive",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["key",{"_index":692,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["key).digest('hex",{"_index":693,"title":{},"body":{"injectables/UsersService.html":{}}}],["key.pem",{"_index":989,"title":{},"body":{"index.html":{}}}],["keyout",{"_index":988,"title":{},"body":{"index.html":{}}}],["keyword",{"_index":334,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["kind",{"_index":1097,"title":{},"body":{"license.html":{}}}],["layer",{"_index":1032,"title":{},"body":{"index.html":{}}}],["layout",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["left",{"_index":928,"title":{},"body":{"index.html":{}}}],["length",{"_index":517,"title":{},"body":{"entities/User.html":{}}}],["level",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["liability",{"_index":1111,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1108,"title":{},"body":{"license.html":{}}}],["library",{"_index":960,"title":{},"body":{"index.html":{}}}],["license",{"_index":1056,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":1058,"title":{},"body":{"index.html":{}}}],["limit",{"_index":760,"title":{},"body":{"dependencies.html":{}}}],["limitation",{"_index":1077,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1099,"title":{},"body":{"license.html":{}}}],["loads",{"_index":904,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":857,"title":{},"body":{"index.html":{}}}],["locally",{"_index":841,"title":{},"body":{"index.html":{}}}],["located",{"_index":980,"title":{},"body":{"index.html":{}}}],["location",{"_index":1027,"title":{},"body":{"index.html":{}}}],["logger",{"_index":177,"title":{},"body":{"injectables/AppService.html":{}}}],["logging",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"index.html":{}}}],["login",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{}}}],["login(@body",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(payload",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["logindto",{"_index":201,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["logs",{"_index":822,"title":{},"body":{"index.html":{}}}],["logs/application",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["logs/error.log",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["luckily",{"_index":969,"title":{},"body":{"index.html":{}}}],["made",{"_index":826,"title":{},"body":{"index.html":{}}}],["main",{"_index":1040,"title":{},"body":{"index.html":{}}}],["make",{"_index":838,"title":{},"body":{"index.html":{}}}],["makes",{"_index":975,"title":{},"body":{"index.html":{}}}],["manage",{"_index":331,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["manual",{"_index":867,"title":{},"body":{"index.html":{}}}],["many",{"_index":532,"title":{},"body":{"entities/User.html":{},"entities/UserRoles.html":{}}}],["manytoone",{"_index":557,"title":{},"body":{"entities/UserRoles.html":{}}}],["manytoone(undefined",{"_index":552,"title":{},"body":{"entities/UserRoles.html":{}}}],["mapping",{"_index":1029,"title":{},"body":{"index.html":{}}}],["matches",{"_index":474,"title":{},"body":{"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["matches(/^[a",{"_index":475,"title":{},"body":{"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["matching",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"modules/CaslModule.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PasswordTransformer.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxfiles",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["maxsize",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["merchantability",{"_index":1101,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1080,"title":{},"body":{"license.html":{}}}],["message",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/UsersService.html":{}}}],["metadata",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":427,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["methods",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/PasswordTransformer.html":{},"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["minlength",{"_index":441,"title":{},"body":{"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["minlength(8",{"_index":444,"title":{},"body":{"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["mins",{"_index":923,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":795,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1057,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["mm",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["mode",{"_index":884,"title":{},"body":{"index.html":{}}}],["modify",{"_index":1079,"title":{},"body":{"license.html":{}}}],["module",{"_index":54,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["modulemocker",{"_index":708,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["modulemocker(global",{"_index":1145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modules",{"_index":56,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["mongodb",{"_index":954,"title":{},"body":{"index.html":{}}}],["mongoose",{"_index":966,"title":{},"body":{"index.html":{}}}],["msanvarov",{"_index":1063,"title":{},"body":{"license.html":{}}}],["mssql",{"_index":955,"title":{},"body":{"index.html":{}}}],["mutated",{"_index":593,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["mysql",{"_index":849,"title":{},"body":{"index.html":{}}}],["mysql/mariadb",{"_index":949,"title":{},"body":{"index.html":{}}}],["mysql2",{"_index":779,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":180,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/PasswordTransformer.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["navigate",{"_index":190,"title":{},"body":{"injectables/AppService.html":{}}}],["needed",{"_index":930,"title":{},"body":{"index.html":{}}}],["nest",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/common",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"modules/CaslModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":394,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":254,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":256,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":766,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newkey",{"_index":986,"title":{},"body":{"index.html":{}}}],["nginx",{"_index":911,"title":{},"body":{"index.html":{}}}],["node.js",{"_index":802,"title":{},"body":{"index.html":{}}}],["nodes",{"_index":993,"title":{},"body":{"index.html":{}}}],["non",{"_index":836,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":1104,"title":{},"body":{"license.html":{}}}],["notacceptableexception",{"_index":654,"title":{},"body":{"injectables/UsersService.html":{}}}],["notice",{"_index":1091,"title":{},"body":{"license.html":{}}}],["npm",{"_index":874,"title":{},"body":{"index.html":{}}}],["nrwl/angular",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["number",{"_index":273,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"injectables/UsersService.html":{}}}],["nx",{"_index":824,"title":{},"body":{"index.html":{}}}],["object",{"_index":415,"title":{},"body":{"injectables/JwtStrategy.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["object.keys(payload).foreach((key",{"_index":691,"title":{},"body":{"injectables/UsersService.html":{}}}],["obtaining",{"_index":1070,"title":{},"body":{"license.html":{}}}],["offers",{"_index":940,"title":{},"body":{"index.html":{}}}],["ondelete",{"_index":554,"title":{},"body":{"entities/UserRoles.html":{}}}],["one",{"_index":531,"title":{},"body":{"entities/User.html":{},"entities/UserRoles.html":{},"injectables/UsersService.html":{}}}],["onetomany",{"_index":537,"title":{},"body":{"entities/User.html":{}}}],["onetomany(undefined",{"_index":527,"title":{},"body":{"entities/User.html":{}}}],["open",{"_index":1017,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["open_api_current_version",{"_index":730,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["open_api_description",{"_index":732,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["open_api_name",{"_index":733,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["open_api_root",{"_index":734,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["openssl",{"_index":984,"title":{},"body":{"index.html":{}}}],["operation",{"_index":643,"title":{},"body":{"injectables/UsersService.html":{}}}],["operational",{"_index":861,"title":{},"body":{"index.html":{}}}],["operations",{"_index":939,"title":{},"body":{"index.html":{}}}],["optional",{"_index":181,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/PasswordTransformer.html":{},"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["options",{"_index":915,"title":{},"body":{"index.html":{}}}],["os",{"_index":1054,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1115,"title":{},"body":{"license.html":{}}}],["out",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["outlined",{"_index":865,"title":{},"body":{"index.html":{}}}],["over",{"_index":943,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1120,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":738,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pages",{"_index":1003,"title":{},"body":{"index.html":{}}}],["panel",{"_index":854,"title":{},"body":{"index.html":{}}}],["param",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/PasswordTransformer.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["param('username",{"_index":618,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":179,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/PasswordTransformer.html":{},"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["particular",{"_index":587,"title":{},"body":{"controllers/UsersController.html":{},"license.html":{}}}],["passion",{"_index":1053,"title":{},"body":{"index.html":{}}}],["passport",{"_index":418,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":255,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":264,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":416,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":419,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/PasswordTransformer.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["password).digest('hex",{"_index":669,"title":{},"body":{"injectables/UsersService.html":{}}}],["password.transformer",{"_index":538,"title":{},"body":{"entities/User.html":{}}}],["passwords",{"_index":524,"title":{},"body":{"entities/User.html":{}}}],["passwordtransformer",{"_index":445,"title":{"classes/PasswordTransformer.html":{}},"body":{"classes/PasswordTransformer.html":{},"entities/User.html":{},"coverage.html":{}}}],["patch",{"_index":463,"title":{},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{}}}],["patch()@apiresponse({status",{"_index":590,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuser",{"_index":565,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuser(@body",{"_index":613,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuser(payload",{"_index":589,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuserdto",{"_index":460,"title":{"classes/PatchUserDto.html":{}},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["path",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["payload[key",{"_index":695,"title":{},"body":{"injectables/UsersService.html":{}}}],["perform",{"_index":938,"title":{},"body":{"index.html":{}}}],["performance",{"_index":941,"title":{},"body":{"index.html":{}}}],["permission",{"_index":1064,"title":{},"body":{"license.html":{}}}],["permit",{"_index":548,"title":{},"body":{"entities/UserRoles.html":{},"license.html":{}}}],["persistence",{"_index":834,"title":{},"body":{"index.html":{}}}],["person",{"_index":1069,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1087,"title":{},"body":{"license.html":{}}}],["pg",{"_index":687,"title":{},"body":{"injectables/UsersService.html":{}}}],["placeholders",{"_index":882,"title":{},"body":{"index.html":{}}}],["plaintext",{"_index":973,"title":{},"body":{"index.html":{}}}],["plaintoclass(user",{"_index":1148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plaintoclass(userroles",{"_index":1150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["please",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["policies.decorator",{"_index":487,"title":{},"body":{"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{}}}],["policies.decorator.ts",{"_index":723,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["policiesguard",{"_index":476,"title":{"guards/PoliciesGuard.html":{}},"body":{"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["policy",{"_index":377,"title":{},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{}}}],["policyhandler",{"_index":376,"title":{},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"guards/PoliciesGuard.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["policyhandlercallback",{"_index":375,"title":{},"body":{"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"miscellaneous/typealiases.html":{}}}],["policyhandlers",{"_index":488,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["policyhandlers.every((handler",{"_index":492,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["port",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["portions",{"_index":1095,"title":{},"body":{"license.html":{}}}],["ports",{"_index":892,"title":{},"body":{"index.html":{}}}],["post",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgres",{"_index":953,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["prerequisites",{"_index":814,"title":{},"body":{"index.html":{}}}],["primarygeneratedcolumn",{"_index":512,"title":{},"body":{"entities/User.html":{},"entities/UserRoles.html":{}}}],["private",{"_index":185,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/PoliciesGuard.html":{},"injectables/UsersService.html":{}}}],["procedure",{"_index":864,"title":{},"body":{"index.html":{}}}],["produce",{"_index":1008,"title":{},"body":{"index.html":{}}}],["production",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{},"entities/UserRoles.html":{}}}],["profiles",{"_index":551,"title":{},"body":{"entities/UserRoles.html":{}}}],["profileservice",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["progress",{"_index":1038,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":801,"title":{},"body":{"index.html":{}}}],["project",{"_index":898,"title":{},"body":{"index.html":{}}}],["promise",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":275,"title":{"properties.html":{}},"body":{"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"properties.html":{}}}],["protocol",{"_index":683,"title":{},"body":{"injectables/UsersService.html":{}}}],["prototype",{"_index":828,"title":{},"body":{"index.html":{}}}],["provide",{"_index":628,"title":{},"body":{"modules/UsersModule.html":{}}}],["provided",{"_index":673,"title":{},"body":{"injectables/UsersService.html":{},"license.html":{}}}],["providers",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{}}}],["provides",{"_index":1024,"title":{},"body":{"index.html":{}}}],["proxy",{"_index":913,"title":{},"body":{"index.html":{}}}],["prs",{"_index":1049,"title":{},"body":{"index.html":{}}}],["public",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@get('/')@apiresponse({status",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["public()@post('login')@apiresponse({status",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@post('register')@apiresponse({status",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{}}}],["public.decorator",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{}}}],["publish",{"_index":1081,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1103,"title":{},"body":{"license.html":{}}}],["queried",{"_index":581,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["quickly",{"_index":827,"title":{},"body":{"index.html":{}}}],["r",{"_index":686,"title":{},"body":{"injectables/UsersService.html":{}}}],["ran",{"_index":994,"title":{},"body":{"index.html":{}}}],["random",{"_index":918,"title":{},"body":{"index.html":{}}}],["react",{"_index":890,"title":{},"body":{"index.html":{}}}],["read",{"_index":345,"title":{},"body":{"injectables/CaslFactory.html":{},"index.html":{}}}],["readonly",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["real",{"_index":1044,"title":{},"body":{"index.html":{}}}],["received",{"_index":608,"title":{},"body":{"controllers/UsersController.html":{}}}],["received'})@apiresponse({status",{"_index":569,"title":{},"body":{"controllers/UsersController.html":{}}}],["record",{"_index":410,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["records",{"_index":702,"title":{},"body":{"injectables/UsersService.html":{}}}],["reflect",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":388,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/PoliciesGuard.html":{}}}],["register",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{},"classes/RegisterDto.html":{}}}],["register(@body",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(payload",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{}}}],["registerdto",{"_index":217,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/RegisterDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["registered",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["registerpayload",{"_index":612,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["registration",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{}}}],["relational",{"_index":1028,"title":{},"body":{"index.html":{}}}],["relations",{"_index":661,"title":{},"body":{"injectables/UsersService.html":{}}}],["relationship",{"_index":533,"title":{},"body":{"entities/User.html":{},"entities/UserRoles.html":{}}}],["rely",{"_index":1052,"title":{},"body":{"index.html":{}}}],["remark",{"_index":332,"title":{},"body":{"injectables/CaslFactory.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["remove",{"_index":572,"title":{},"body":{"controllers/UsersController.html":{}}}],["removes",{"_index":571,"title":{},"body":{"controllers/UsersController.html":{}}}],["replace",{"_index":880,"title":{},"body":{"index.html":{}}}],["repo",{"_index":823,"title":{},"body":{"index.html":{}}}],["repository",{"_index":634,"title":{},"body":{"injectables/UsersService.html":{}}}],["represent",{"_index":530,"title":{},"body":{"entities/User.html":{},"entities/UserRoles.html":{}}}],["represents",{"_index":335,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["req",{"_index":580,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["req.user",{"_index":339,"title":{},"body":{"injectables/CaslFactory.html":{},"controllers/UsersController.html":{}}}],["request",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["request'})@apiresponse({status",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["required",{"_index":443,"title":{},"body":{"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{},"index.html":{}}}],["reset",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["responses",{"_index":883,"title":{},"body":{"index.html":{}}}],["rest",{"_index":872,"title":{},"body":{"index.html":{}}}],["restful",{"_index":1022,"title":{},"body":{"index.html":{}}}],["restriction",{"_index":1075,"title":{},"body":{"license.html":{}}}],["results",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"modules/CaslModule.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PasswordTransformer.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieves",{"_index":577,"title":{},"body":{"controllers/UsersController.html":{}}}],["return",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"classes/PasswordTransformer.html":{},"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/PasswordTransformer.html":{},"guards/PoliciesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["reverse",{"_index":912,"title":{},"body":{"index.html":{}}}],["rich",{"_index":965,"title":{},"body":{"index.html":{}}}],["rights",{"_index":1078,"title":{},"body":{"license.html":{}}}],["role",{"_index":342,"title":{},"body":{"injectables/CaslFactory.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["role.entity",{"_index":259,"title":{},"body":{"modules/AuthModule.html":{},"entities/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["role.entity.ts",{"_index":541,"title":{},"body":{"entities/UserRoles.html":{},"coverage.html":{}}}],["role.entity.ts:16",{"_index":542,"title":{},"body":{"entities/UserRoles.html":{}}}],["role.entity.ts:27",{"_index":546,"title":{},"body":{"entities/UserRoles.html":{}}}],["role.entity.ts:35",{"_index":556,"title":{},"body":{"entities/UserRoles.html":{}}}],["role.user",{"_index":528,"title":{},"body":{"entities/User.html":{}}}],["roles",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["rolesrepository",{"_index":657,"title":{},"body":{"injectables/UsersService.html":{}}}],["root",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["rootpath",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["rotate",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["route",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["rsa:4096",{"_index":987,"title":{},"body":{"index.html":{}}}],["run",{"_index":886,"title":{},"body":{"index.html":{}}}],["running",{"_index":997,"title":{},"body":{"index.html":{}}}],["runtime",{"_index":844,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":786,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":685,"title":{},"body":{"injectables/UsersService.html":{}}}],["safe",{"_index":931,"title":{},"body":{"index.html":{}}}],["sal",{"_index":1128,"title":{},"body":{"properties.html":{}}}],["scalable",{"_index":806,"title":{},"body":{"index.html":{}}}],["seconds",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["secret",{"_index":268,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":424,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":520,"title":{},"body":{"entities/User.html":{}}}],["self",{"_index":977,"title":{},"body":{"index.html":{}}}],["sell",{"_index":1085,"title":{},"body":{"license.html":{}}}],["served",{"_index":900,"title":{},"body":{"index.html":{}}}],["server",{"_index":807,"title":{},"body":{"index.html":{}}}],["servestaticmodule",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forrootasync",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["service",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["set",{"_index":677,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["setmetadata(check_policies_key",{"_index":1143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(is_public_key",{"_index":1144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setparameter",{"_index":668,"title":{},"body":{"injectables/UsersService.html":{}}}],["setparameter('username",{"_index":667,"title":{},"body":{"injectables/UsersService.html":{}}}],["shall",{"_index":1092,"title":{},"body":{"license.html":{}}}],["short",{"_index":1147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":808,"title":{},"body":{"index.html":{}}}],["signed",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"index.html":{}}}],["signoptions",{"_index":270,"title":{},"body":{"modules/AuthModule.html":{}}}],["sits",{"_index":933,"title":{},"body":{"index.html":{}}}],["software",{"_index":1072,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"modules/CaslModule.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PasswordTransformer.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["spdy",{"_index":996,"title":{},"body":{"index.html":{}}}],["special",{"_index":333,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["specification",{"_index":1019,"title":{},"body":{"index.html":{}}}],["sqlite",{"_index":952,"title":{},"body":{"index.html":{}}}],["sqlite3",{"_index":961,"title":{},"body":{"index.html":{}}}],["stack",{"_index":851,"title":{},"body":{"index.html":{}}}],["standalone",{"_index":859,"title":{},"body":{"index.html":{}}}],["start",{"_index":856,"title":{},"body":{"index.html":{}}}],["started",{"_index":799,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["starter",{"_index":800,"title":{},"body":{"index.html":{}}}],["starter/api",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"entities/UserRoles.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["startingmessage",{"_index":175,"title":{},"body":{"injectables/AppService.html":{}}}],["statements",{"_index":705,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["status",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["still",{"_index":946,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":406,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/LoginDto.html":{},"classes/PasswordTransformer.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":336,"title":{},"body":{"injectables/CaslFactory.html":{},"license.html":{}}}],["subjects",{"_index":330,"title":{},"body":{"injectables/CaslFactory.html":{},"miscellaneous/typealiases.html":{}}}],["sublicense",{"_index":1083,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1094,"title":{},"body":{"license.html":{}}}],["sudo",{"_index":678,"title":{},"body":{"injectables/UsersService.html":{}}}],["super",{"_index":399,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["super.canactivate(context",{"_index":404,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":1048,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supported",{"_index":963,"title":{},"body":{"index.html":{}}}],["supports",{"_index":951,"title":{},"body":{"index.html":{}}}],["sure",{"_index":839,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1118,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1018,"title":{},"body":{"index.html":{}}}],["synchronize",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["system",{"_index":698,"title":{},"body":{"injectables/UsersService.html":{}}}],["table",{"_index":737,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":736,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":1042,"title":{},"body":{"index.html":{}}}],["terminal",{"_index":896,"title":{},"body":{"index.html":{}}}],["test",{"_index":1001,"title":{},"body":{"index.html":{}}}],["test@user.com",{"_index":1149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testing",{"_index":820,"title":{},"body":{"index.html":{}}}],["tests",{"_index":999,"title":{},"body":{"index.html":{}}}],["this.appservice.startingmessage",{"_index":51,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.createtoken(user",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(payload",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.caslfactory.createforuser(user",{"_index":491,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["this.configservice.get('webtoken_expiration_time",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.execpolicyhandler(handler",{"_index":493,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["this.expiration",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getbyusername(payload.username",{"_index":671,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.getbyusername(username",{"_index":690,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.jwtservice.sign",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.info('calling",{"_index":186,"title":{},"body":{"injectables/AppService.html":{}}}],["this.reflector.get",{"_index":489,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":401,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.userrepository",{"_index":663,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.create",{"_index":681,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.delete",{"_index":699,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findone",{"_index":660,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findoneby",{"_index":662,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.save",{"_index":680,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.save(user",{"_index":696,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrolesrepository.save(roles",{"_index":679,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(payload",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.delete(username",{"_index":619,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.edit(payload",{"_index":614,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.getbyusername(username",{"_index":610,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.getbyusernameandpass",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["thus",{"_index":967,"title":{},"body":{"index.html":{}}}],["time",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["timediff",{"_index":430,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["to(value",{"_index":454,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["token",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"index.html":{}}}],["tokens",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["tort",{"_index":1114,"title":{},"body":{"license.html":{}}}],["transform",{"_index":456,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["transformer",{"_index":447,"title":{},"body":{"classes/PasswordTransformer.html":{},"entities/User.html":{},"dependencies.html":{}}}],["transports",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["trigger",{"_index":855,"title":{},"body":{"index.html":{}}}],["true",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["true})@isalphanumeric()@isnotempty",{"_index":436,"title":{},"body":{"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["true})@isemail()@isnotempty",{"_index":499,"title":{},"body":{"classes/RegisterDto.html":{}}}],["true})@isnotempty()@minlength(8",{"_index":433,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["true})@matches(/^[a",{"_index":501,"title":{},"body":{"classes/RegisterDto.html":{}}}],["try",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["tslib",{"_index":788,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/PasswordTransformer.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1130,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedocs",{"_index":821,"title":{},"body":{"index.html":{}}}],["typedocs:api:start",{"_index":1007,"title":{},"body":{"index.html":{}}}],["typedocs:ui:start",{"_index":1014,"title":{},"body":{"index.html":{}}}],["typeof",{"_index":494,"title":{},"body":{"guards/PoliciesGuard.html":{}}}],["typeorm",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"classes/PasswordTransformer.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"index.html":{}}}],["typeormmodule",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":263,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forrootasync",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleasyncoptions",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"entities/UserRoles.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["typing",{"_index":1006,"title":{},"body":{"index.html":{}}}],["ui",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["unauthorized",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{}}}],["unauthorizedexception",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["undefined",{"_index":519,"title":{},"body":{"entities/User.html":{},"entities/UserRoles.html":{}}}],["unique",{"_index":539,"title":{},"body":{"entities/User.html":{}}}],["unit",{"_index":998,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{}}}],["up",{"_index":907,"title":{},"body":{"index.html":{}}}],["update",{"_index":352,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["url",{"_index":511,"title":{},"body":{"entities/User.html":{},"injectables/UsersService.html":{}}}],["url(payload.email",{"_index":682,"title":{},"body":{"injectables/UsersService.html":{}}}],["use",{"_index":925,"title":{},"body":{"index.html":{},"license.html":{}}}],["useclass",{"_index":629,"title":{},"body":{"modules/UsersModule.html":{}}}],["used",{"_index":1020,"title":{},"body":{"index.html":{}}}],["usefactory",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["useguards",{"_index":595,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(policiesguard",{"_index":616,"title":{},"body":{"controllers/UsersController.html":{}}}],["user",{"_index":240,"title":{"entities/User.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtStrategy.html":{},"classes/PatchUserDto.html":{},"guards/PoliciesGuard.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":602,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":462,"title":{},"body":{"classes/PatchUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:20",{"_index":465,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:30",{"_index":472,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:38",{"_index":469,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:46",{"_index":471,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.entity",{"_index":558,"title":{},"body":{"entities/UserRoles.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["user.roles",{"_index":553,"title":{},"body":{"entities/UserRoles.html":{}}}],["user.roles.some",{"_index":341,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["user.username",{"_index":351,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["user[key",{"_index":694,"title":{},"body":{"injectables/UsersService.html":{}}}],["useractionsenum",{"_index":326,"title":{},"body":{"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{}}}],["username",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["userrepository",{"_index":637,"title":{},"body":{"injectables/UsersService.html":{}}}],["userrole",{"_index":716,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userroles",{"_index":257,"title":{"entities/UserRoles.html":{}},"body":{"modules/AuthModule.html":{},"entities/User.html":{},"entities/UserRoles.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userrolesenum",{"_index":327,"title":{},"body":{"injectables/CaslFactory.html":{},"entities/UserRoles.html":{}}}],["userrolesenum.sudo",{"_index":343,"title":{},"body":{"injectables/CaslFactory.html":{},"entities/UserRoles.html":{},"miscellaneous/variables.html":{}}}],["userrolesrepository",{"_index":635,"title":{},"body":{"injectables/UsersService.html":{}}}],["users",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":627,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.password",{"_index":666,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.service",{"_index":603,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/user",{"_index":258,"title":{},"body":{"modules/AuthModule.html":{}}}],["users/user.entity",{"_index":260,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CaslFactory.html":{},"classes/DeleteUserPolicyHandler.html":{},"interfaces/IPolicyHandler.html":{},"injectables/JwtStrategy.html":{}}}],["users/users.module",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["users/users.service",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["userscontroller",{"_index":559,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":63,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":226,"title":{"injectables/UsersService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":885,"title":{},"body":{"index.html":{}}}],["utilize",{"_index":916,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":514,"title":{},"body":{"entities/User.html":{},"entities/UserRoles.html":{},"injectables/UsersService.html":{}}}],["v1/auth",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["v1/users",{"_index":561,"title":{},"body":{"controllers/UsersController.html":{}}}],["valid",{"_index":414,"title":{},"body":{"injectables/JwtStrategy.html":{},"index.html":{}}}],["valid('development",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["validate",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["validate(undefined",{"_index":409,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validates",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(undefined",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":426,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validationschema",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":442,"title":{},"body":{"classes/LoginDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{},"dependencies.html":{}}}],["value",{"_index":453,"title":{},"body":{"classes/PasswordTransformer.html":{},"miscellaneous/variables.html":{}}}],["value).digest('hex",{"_index":459,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["valuetransformer",{"_index":448,"title":{},"body":{"classes/PasswordTransformer.html":{}}}],["variable",{"_index":707,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["variables",{"_index":1134,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1126,"title":{},"body":{"properties.html":{},"miscellaneous/variables.html":{}}}],["via",{"_index":845,"title":{},"body":{"index.html":{}}}],["view",{"_index":1034,"title":{},"body":{"index.html":{}}}],["vue",{"_index":891,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1100,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1096,"title":{},"body":{"license.html":{}}}],["web",{"_index":818,"title":{},"body":{"index.html":{}}}],["webtoken_encryption_key",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["webtoken_expiration_time",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["welcome",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["welcomemessage",{"_index":187,"title":{},"body":{"injectables/AppService.html":{}}}],["where('users.username",{"_index":665,"title":{},"body":{"injectables/UsersService.html":{}}}],["whether",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"license.html":{}}}],["window",{"_index":897,"title":{},"body":{"index.html":{}}}],["winston",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"dependencies.html":{},"index.html":{}}}],["winston.format.json",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.format.simple",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.transports.console",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.transports.file",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["winston_module_provider",{"_index":183,"title":{},"body":{"injectables/AppService.html":{}}}],["winstonfilerotator",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["winstonmodule",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["winstonmodule.forrootasync",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["without",{"_index":868,"title":{},"body":{"index.html":{},"license.html":{}}}],["work",{"_index":1026,"title":{},"body":{"index.html":{}}}],["world",{"_index":1045,"title":{},"body":{"index.html":{}}}],["wrapper",{"_index":959,"title":{},"body":{"index.html":{}}}],["write",{"_index":346,"title":{},"body":{"injectables/CaslFactory.html":{}}}],["writing",{"_index":526,"title":{},"body":{"entities/User.html":{}}}],["x509",{"_index":985,"title":{},"body":{"index.html":{}}}],["xampp",{"_index":852,"title":{},"body":{"index.html":{}}}],["yarn",{"_index":875,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["z",{"_index":468,"title":{},"body":{"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["za",{"_index":467,"title":{},"body":{"classes/PatchUserDto.html":{},"classes/RegisterDto.html":{}}}],["zippedarchive",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["zone.js",{"_index":793,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                App Controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getStartingMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getStartingMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStartingMessage()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get('/')@ApiResponse({status: 200, description: 'Root Request Completed'})@ApiResponse({status: 400, description: 'Root Request Failed'})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app.controller.ts:29\n                \n            \n\n\n            \n                \n                    Returns a welcome message\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        a welcome message\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse } from '@nestjs/swagger';\n\nimport { IMessage } from '@starter/api-types';\n\nimport { AppService } from './app.service';\nimport { Public } from './auth/public.decorator';\n\n/**\n * App Controller\n */\n@ApiBearerAuth()\n@Controller()\nexport class AppController {\n  /**\n   * Constructor\n   * @param {AppService} appService app service\n   */\n  constructor(private readonly appService: AppService) {}\n\n  /**\n   * Returns a welcome message\n   * @returns {string} a welcome message\n   */\n  @Public()\n  @Get('/')\n  @ApiResponse({ status: 200, description: 'Root Request Completed' })\n  @ApiResponse({ status: 400, description: 'Root Request Failed' })\n  async getStartingMessage(): Promise {\n    return this.appService.startingMessage();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCaslModule\n\nCaslModule\n\nAppModule -->\n\nCaslModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CaslModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { TypeOrmModule, TypeOrmModuleAsyncOptions } from '@nestjs/typeorm';\nimport * as joi from 'joi';\nimport { WinstonModule } from 'nest-winston';\nimport { join } from 'path';\nimport * as winston from 'winston';\nimport * as winstonFileRotator from 'winston-daily-rotate-file';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { CaslModule } from './casl/casl.module';\nimport { UsersModule } from './users/users.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      validationSchema: joi.object({\n        APP_ENV: joi\n          .string()\n          .valid('development', 'production')\n          .default('development'),\n        WEBTOKEN_ENCRYPTION_KEY: joi.string().required(),\n        WEBTOKEN_EXPIRATION_TIME: joi.number().default(1800),\n        DB_TYPE: joi.string().default('mariadb'),\n        DB_USERNAME: joi.string().default('root'),\n        DB_PASSWORD: joi.string().allow('').default(''),\n        DB_HOST: joi.string().default('localhost'),\n        DB_PORT: joi.number().default('3306'),\n        DB_DATABASE: joi.string().default('nest'),\n      }),\n    }),\n    ServeStaticModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) =>\n        config.get('APP_ENV') === 'production'\n          ? [\n              {\n                rootPath: join(__dirname, '..', 'ui'),\n              },\n            ]\n          : [],\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => {\n        return {\n          type: configService.get('DB_TYPE'),\n          host: configService.get('DB_HOST'),\n          port: configService.get('DB_PORT'),\n          username: configService.get('DB_USERNAME'),\n          password: configService.get('DB_PASSWORD'),\n          database: configService.get('DB_DATABASE'),\n          entities: [__dirname + '/**/**.entity{.ts,.js}'],\n          synchronize: configService.get('APP_ENV') === 'development',\n          autoLoadEntities: true,\n          logging: true,\n          keepConnectionAlive: true,\n        } as TypeOrmModuleAsyncOptions;\n      },\n    }),\n    WinstonModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => {\n        return configService.get('APP_ENV') === 'development'\n          ? {\n              level: 'info',\n              format: winston.format.json(),\n              defaultMeta: { service: 'nest-typeorm-service' },\n              transports: [\n                new winston.transports.Console({\n                  format: winston.format.simple(),\n                }),\n              ],\n            }\n          : {\n              level: 'info',\n              format: winston.format.json(),\n              defaultMeta: { service: 'nest-typeorm-service' },\n              transports: [\n                new winston.transports.File({\n                  filename: 'logs/error.log',\n                  level: 'error',\n                }),\n                new winston.transports.Console({\n                  format: winston.format.simple(),\n                }),\n                new winstonFileRotator({\n                  filename: 'logs/application-%DATE%.log',\n                  datePattern: 'YYYY-MM-DD',\n                  zippedArchive: true,\n                  maxSize: '20m',\n                  maxFiles: '14d',\n                }),\n              ],\n            };\n      },\n    }),\n    AuthModule,\n    UsersModule,\n    CaslModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Application Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                startingMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app.service.ts:11\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                logging service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        startingMessage\n                        \n                    \n                \n            \n            \n                \nstartingMessage()\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app.service.ts:24\n                \n            \n\n\n            \n                \n                    Returns a welcome message.\n\n\n                    \n                    \n                    \n                        Returns :     IMessage\n\n                    \n                    \n                        welcome message\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { WINSTON_MODULE_PROVIDER } from 'nest-winston';\nimport { Logger } from 'winston';\n\nimport { IMessage } from '@starter/api-types';\n\n/**\n * Application Service\n */\n@Injectable()\nexport class AppService {\n  /**\n   * Constructor\n   * @param {Logger} logger logging service\n   */\n  constructor(\n    @Inject(WINSTON_MODULE_PROVIDER) private readonly logger: Logger,\n  ) {}\n\n  /**\n   * Returns a welcome message.\n   * @returns {string} welcome message\n   */\n  startingMessage(): IMessage {\n    this.logger.info('Calling welcomeMessage -> ', AppService.name);\n\n    return {\n      message: 'Welcome to api! Navigate to api/v1/docs for documentation.',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v1/auth\n            \n\n\n            \n                Description\n            \n            \n                Authentication Controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(payload: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('login')@ApiResponse({status: 201, description: 'Login Completed'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/auth/auth.controller.ts:37\n                \n            \n\n\n            \n                \n                    Login route to validate and create tokens for users\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the login dto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(payload: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('register')@ApiResponse({status: 201, description: 'Registration Completed'})@ApiResponse({status: 400, description: 'Bad Request'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/auth/auth.controller.ts:51\n                \n            \n\n\n            \n                \n                    Authentication route to register\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the registration dto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport { IJWTResponseBody } from '@starter/api-types';\n\nimport { UsersService } from '../users/users.service';\nimport { AuthService } from './auth.service';\nimport { LoginDto } from './dto/login.dto';\nimport { RegisterDto } from './dto/register.dto';\nimport { Public } from './public.decorator';\n\n/**\n * Authentication Controller\n */\n@ApiTags('authentication')\n@Controller('v1/auth')\nexport class AuthController {\n  /**\n   * Constructor\n   * @param {AuthService} authService authentication service\n   * @param {ProfileService} usersService profile service\n   */\n  constructor(\n    private readonly authService: AuthService,\n    private readonly usersService: UsersService,\n  ) {}\n\n  /**\n   * Login route to validate and create tokens for users\n   * @param {LoginDto} payload the login dto\n   */\n  @Public()\n  @Post('login')\n  @ApiResponse({ status: 201, description: 'Login Completed' })\n  @ApiResponse({ status: 400, description: 'Bad Request' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  async login(@Body() payload: LoginDto): Promise {\n    const user = await this.authService.validateUser(payload);\n    return this.authService.createToken(user);\n  }\n\n  /**\n   * Authentication route to register\n   * @param {RegisterDto} payload the registration dto\n   */\n  @Public()\n  @Post('register')\n  @ApiResponse({ status: 201, description: 'Registration Completed' })\n  @ApiResponse({ status: 400, description: 'Bad Request' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  async register(@Body() payload: RegisterDto) {\n    const user = await this.usersService.create(payload);\n    return this.authService.createToken(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nJwtStrategy \n\nJwtStrategy \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { UserRoles } from '../users/user-role.entity';\nimport { User } from '../users/user.entity';\nimport { UsersService } from '../users/users.service';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    ConfigModule,\n    TypeOrmModule.forFeature([User, UserRoles]),\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => {\n        return {\n          secret: configService.get('WEBTOKEN_ENCRYPTION_KEY'),\n          signOptions: {\n            ...(configService.get('WEBTOKEN_EXPIRATION_TIME')\n              ? {\n                  expiresIn: Number(\n                    configService.get('WEBTOKEN_EXPIRATION_TIME'),\n                  ),\n                }\n              : {}),\n          },\n        };\n      },\n      inject: [ConfigService],\n    }),\n  ],\n  providers: [AuthService, JwtStrategy, UsersService],\n  exports: [AuthService, JwtStrategy],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/auth/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Authentication Service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                expiration\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createToken\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, usersService: UsersService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/auth/auth.service.ts:21\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                jwt service\n\n                                                        \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                users service\n\n                                                        \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    createToken(undefined: User)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/auth/auth.service.ts:41\n                \n            \n\n\n            \n                \n                    Creates a signed jwt token based on User payload\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        token body\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(undefined: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/auth/auth.service.ts:68\n                \n            \n\n\n            \n                \n                    Validates whether or not the user exists in the database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        registered user\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        expiration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/auth/auth.service.ts:21\n                        \n                    \n\n            \n                \n                    Time in seconds when the token is to expire\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport * as moment from 'moment';\n\nimport { IJWTResponseBody } from '@starter/api-types';\n\nimport { User } from '../users/user.entity';\nimport { UsersService } from '../users/users.service';\nimport { LoginDto } from './dto/login.dto';\n\n/**\n * Authentication Service\n */\n@Injectable()\nexport class AuthService {\n  /**\n   * Time in seconds when the token is to expire\n   * @type {number}\n   */\n  private readonly expiration: number;\n\n  /**\n   * Constructor\n   * @param {JwtService} jwtService jwt service\n   * @param {UsersService} usersService users service\n   */\n  constructor(\n    private readonly jwtService: JwtService,\n    private readonly usersService: UsersService,\n    private readonly configService: ConfigService,\n  ) {\n    this.expiration = this.configService.get('WEBTOKEN_EXPIRATION_TIME');\n  }\n\n  /**\n   * Creates a signed jwt token based on User payload\n   * @param {User} param dto to generate token from\n   * @returns {Promise} token body\n   */\n  async createToken({\n    id,\n    username,\n    name,\n    roles,\n    email,\n  }: User): Promise {\n    return {\n      expiration: this.expiration,\n      expirationFormatted: moment()\n        .add(this.expiration, 'seconds')\n        .format('LLL'),\n      token: this.jwtService.sign({\n        id,\n        username,\n        name,\n        roles,\n        email,\n      }),\n    };\n  }\n\n  /**\n   * Validates whether or not the user exists in the database\n   * @param {LoginDto} param login payload to authenticate with\n   * @returns {Promise} registered user\n   */\n  async validateUser({ username, password }: LoginDto): Promise {\n    const user = await this.usersService.getByUsernameAndPass(\n      username,\n      password,\n    );\n\n    if (!user) {\n      throw new UnauthorizedException(\n        'Could not authenticate. Please try again',\n      );\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CaslFactory.html":{"url":"injectables/CaslFactory.html","title":"injectable - CaslFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CaslFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/casl/casl.factory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createForUser\n                        \n                    \n                \n            \n            \n                \ncreateForUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/casl/casl.factory.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Ability,\n  AbilityBuilder,\n  AbilityClass,\n  ExtractSubjectType,\n  InferSubjects,\n} from '@casl/ability';\nimport { Injectable } from '@nestjs/common';\n\nimport { UserActionsEnum, UserRolesEnum } from '@starter/api-types';\n\nimport { User } from '../users/user.entity';\n\n// Creating CASL subjects to manage. Remark: all is a special keyword in CASL that represents \"any subject\".\ntype Subjects = InferSubjects | 'all';\n\nexport type AppAbility = Ability;\n\n@Injectable()\nexport class CaslFactory {\n  createForUser(user: User) {\n    // Remark: the user is coming from the req.user.\n    const { can, build } = new AbilityBuilder\n    >(Ability as AbilityClass);\n\n    if (user.roles.some(({ role }) => role === UserRolesEnum.SUDO)) {\n      can(UserActionsEnum.Manage, 'all'); // read-write access to everything\n    } else {\n      can(UserActionsEnum.Read, 'all'); // read-only access to everything\n    }\n\n    can(UserActionsEnum.Update, User, { username: user.username }); // update own user\n\n    return build({\n      // Read https://casl.js.org/v5/en/guide/subject-type-detection#use-classes-as-subject-types for details\n      detectSubjectType: (item) =>\n        item.constructor as ExtractSubjectType,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CaslModule.html":{"url":"modules/CaslModule.html","title":"module - CaslModule","body":"\n                   \n\n\n\n\n    Modules\n    CaslModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CaslModule\n\n\n\ncluster_CaslModule_providers\n\n\n\ncluster_CaslModule_exports\n\n\n\n\nCaslFactory \n\nCaslFactory \n\n\n\nCaslModule\n\nCaslModule\n\nCaslFactory  -->\n\nCaslModule->CaslFactory \n\n\n\n\n\nCaslFactory\n\nCaslFactory\n\nCaslModule -->\n\nCaslFactory->CaslModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/casl/casl.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CaslFactory\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CaslFactory\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { CaslFactory } from './casl.factory';\n\n@Module({\n  providers: [CaslFactory],\n  exports: [CaslFactory],\n})\nexport class CaslModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserPolicyHandler.html":{"url":"classes/DeleteUserPolicyHandler.html","title":"class - DeleteUserPolicyHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserPolicyHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/casl/policy-handlers.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IPolicyHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(ability: AppAbility)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/casl/policy-handlers.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ability\n                                    \n                                                AppAbility\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UserActionsEnum } from '@starter/api-types';\n\nimport { User } from '../users/user.entity';\nimport { AppAbility } from './casl.factory';\n\ninterface IPolicyHandler {\n  handle(ability: AppAbility): boolean;\n}\n\ntype PolicyHandlerCallback = (ability: AppAbility) => boolean;\n\nexport type PolicyHandler = IPolicyHandler | PolicyHandlerCallback;\n\n// Policy Handlers\n\nexport class DeleteUserPolicyHandler implements IPolicyHandler {\n  handle(ability: AppAbility) {\n    return ability.can(UserActionsEnum.Delete, User);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPolicyHandler.html":{"url":"interfaces/IPolicyHandler.html","title":"interface - IPolicyHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPolicyHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/casl/policy-handlers.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        handle\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(ability: AppAbility)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/casl/policy-handlers.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ability\n                                    \n                                                AppAbility\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { UserActionsEnum } from '@starter/api-types';\n\nimport { User } from '../users/user.entity';\nimport { AppAbility } from './casl.factory';\n\ninterface IPolicyHandler {\n  handle(ability: AppAbility): boolean;\n}\n\ntype PolicyHandlerCallback = (ability: AppAbility) => boolean;\n\nexport type PolicyHandler = IPolicyHandler | PolicyHandlerCallback;\n\n// Policy Handlers\n\nexport class DeleteUserPolicyHandler implements IPolicyHandler {\n  handle(ability: AppAbility) {\n    return ability.can(UserActionsEnum.Delete, User);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/auth/jwt-auth.guard.ts\n        \n\n\n            \n                Description\n            \n            \n                JWT Authentication Guard\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/auth/jwt-auth.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/auth/jwt-auth.guard.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\n\nimport { IS_PUBLIC_KEY } from './public.decorator';\n\n/**\n * JWT Authentication Guard\n */\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext) {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      return true;\n    }\n    return super.canActivate(context);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/auth/jwt.strategy.ts\n        \n\n\n            \n                Description\n            \n            \n                Jwt Strategy Class\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/auth/jwt.strategy.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(undefined: Record)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/auth/jwt.strategy.ts:35\n                \n            \n\n\n            \n                \n                    Checks if the bearer token is a valid token\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        a object to be signed\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\nimport { User } from '../users/user.entity';\nimport { UsersService } from '../users/users.service';\n\n/**\n * Jwt Strategy Class\n */\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  /**\n   * Constructor\n   * @param {ConfigService} configService\n   * @param {ProfileService} usersService\n   */\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly usersService: UsersService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('WEBTOKEN_ENCRYPTION_KEY'),\n    });\n  }\n\n  /**\n   * Checks if the bearer token is a valid token\n   * @param {Record} jwtPayload validation method for jwt token\n   * @returns {Promise>} a object to be signed\n   */\n  async validate({ iat, exp, id }: Record): Promise {\n    const timeDiff = exp - iat;\n    if (timeDiff \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/auth/dto/login.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Login Dto Class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsNotEmpty()@MinLength(8)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/auth/dto/login.dto.ts:26\n                        \n                    \n\n            \n                \n                    Password field\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsAlphanumeric()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/auth/dto/login.dto.ts:16\n                        \n                    \n\n            \n                \n                    Username field\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsAlphanumeric, IsNotEmpty, MinLength } from 'class-validator';\n\n/**\n * Login Dto Class\n */\nexport class LoginDto {\n  /**\n   * Username field\n   */\n  @ApiProperty({\n    required: true,\n  })\n  @IsAlphanumeric()\n  @IsNotEmpty()\n  username: string;\n\n  /**\n   * Password field\n   */\n  @ApiProperty({\n    required: true,\n  })\n  @IsNotEmpty()\n  @MinLength(8)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordTransformer.html":{"url":"classes/PasswordTransformer.html","title":"class - PasswordTransformer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordTransformer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/users/password.transformer.ts\n        \n\n\n            \n                Description\n            \n            \n                Password Transformer Class\n\n            \n\n\n            \n                Implements\n            \n            \n                        ValueTransformer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                from\n                            \n                            \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        from\n                        \n                    \n                \n            \n            \n                \nfrom(value: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/users/password.transformer.ts:20\n                \n            \n\n\n            \n                \n                    Grabs the string to hash from\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        from string\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        to\n                        \n                    \n                \n            \n            \n                \nto(value: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/users/password.transformer.ts:12\n                \n            \n\n\n            \n                \n                    Value to transform to\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        string to hash\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as crypto from 'crypto';\nimport { ValueTransformer } from 'typeorm';\n\n/**\n * Password Transformer Class\n */\nexport class PasswordTransformer implements ValueTransformer {\n  /**\n   * Value to transform to\n   * @param {string} value string to hash\n   */\n  to(value: string) {\n    return crypto.createHmac('sha256', value).digest('hex');\n  }\n\n  /**\n   * Grabs the string to hash from\n   * @param {string} value from string\n   */\n  from(value: string) {\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchUserDto.html":{"url":"classes/PatchUserDto.html","title":"class - PatchUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/users/dto/patch-user.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Patch User Payload Class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/dto/patch-user.dto.ts:20\n                        \n                    \n\n            \n                \n                    Email field\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Matches(/^[a-zA-Z ]+$/)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/dto/patch-user.dto.ts:38\n                        \n                    \n\n            \n                \n                    Name field\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@MinLength(8)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/dto/patch-user.dto.ts:46\n                        \n                    \n\n            \n                \n                    Password field\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsAlphanumeric()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/dto/patch-user.dto.ts:30\n                        \n                    \n\n            \n                \n                    Username field\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsAlphanumeric,\n  IsEmail,\n  IsNotEmpty,\n  Matches,\n  MinLength,\n} from 'class-validator';\n\n/**\n * Patch User Payload Class\n */\nexport class PatchUserDto {\n  /**\n   * Email field\n   */\n  @ApiProperty()\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  /**\n   * Username field\n   */\n  @ApiProperty({\n    required: true,\n  })\n  @IsAlphanumeric()\n  @IsNotEmpty()\n  username: string;\n\n  /**\n   * Name field\n   */\n  @ApiProperty()\n  @Matches(/^[a-zA-Z ]+$/)\n  @IsNotEmpty()\n  name: string;\n\n  /**\n   * Password field\n   */\n  @ApiProperty()\n  @IsNotEmpty()\n  @MinLength(8)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/PoliciesGuard.html":{"url":"guards/PoliciesGuard.html","title":"guard - PoliciesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    PoliciesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                apps/api/src/casl/policies.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                execPolicyHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, CaslFactory: CaslFactory)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/casl/policies.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        CaslFactory\n                                                  \n                                                        \n                                                                        CaslFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/casl/policies.guard.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        execPolicyHandler\n                        \n                    \n                \n            \n            \n                \n                    \n                    execPolicyHandler(handler: PolicyHandler, ability: AppAbility)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/casl/policies.guard.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                PolicyHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ability\n                                    \n                                                AppAbility\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\n\nimport { AppAbility, CaslFactory } from './casl.factory';\nimport { CHECK_POLICIES_KEY } from './check-policies.decorator';\nimport { PolicyHandler } from './policy-handlers';\n\n@Injectable()\nexport class PoliciesGuard implements CanActivate {\n  constructor(private reflector: Reflector, private CaslFactory: CaslFactory) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const policyHandlers =\n      this.reflector.get(\n        CHECK_POLICIES_KEY,\n        context.getHandler(),\n      ) || [];\n\n    const { user } = context.switchToHttp().getRequest();\n    const ability = this.CaslFactory.createForUser(user);\n\n    return policyHandlers.every((handler) =>\n      this.execPolicyHandler(handler, ability),\n    );\n  }\n\n  private execPolicyHandler(handler: PolicyHandler, ability: AppAbility) {\n    if (typeof handler === 'function') {\n      return handler(ability);\n    }\n    return handler.handle(ability);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/auth/dto/register.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Register Dto Class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/auth/dto/register.dto.ts:22\n                        \n                    \n\n            \n                \n                    Email field\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@Matches(/^[a-zA-Z ]+$/)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/auth/dto/register.dto.ts:42\n                        \n                    \n\n            \n                \n                    Name field\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsNotEmpty()@MinLength(8)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/auth/dto/register.dto.ts:52\n                        \n                    \n\n            \n                \n                    Password field\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: true})@IsAlphanumeric()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/auth/dto/register.dto.ts:32\n                        \n                    \n\n            \n                \n                    Username field\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsAlphanumeric,\n  IsEmail,\n  IsNotEmpty,\n  Matches,\n  MinLength,\n} from 'class-validator';\n\n/**\n * Register Dto Class\n */\nexport class RegisterDto {\n  /**\n   * Email field\n   */\n  @ApiProperty({\n    required: true,\n  })\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  /**\n   * Username field\n   */\n  @ApiProperty({\n    required: true,\n  })\n  @IsAlphanumeric()\n  @IsNotEmpty()\n  username: string;\n\n  /**\n   * Name field\n   */\n  @ApiProperty({\n    required: true,\n  })\n  @Matches(/^[a-zA-Z ]+$/)\n  @IsNotEmpty()\n  name: string;\n\n  /**\n   * Password field\n   */\n  @ApiProperty({\n    required: true,\n  })\n  @IsNotEmpty()\n  @MinLength(8)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/users/user.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                User Entity Class\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                gravatar\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                roles\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/user.entity.ts:36\n                        \n                    \n\n            \n                \n                    Email column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gravatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/user.entity.ts:42\n                        \n                    \n\n            \n                \n                    Gravatar column (gravatar url)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/user.entity.ts:18\n                        \n                    \n\n            \n                \n                    UUID column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/user.entity.ts:30\n                        \n                    \n\n            \n                \n                    Name column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'password', length: 255, transformer: undefined, select: false})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/user.entity.ts:60\n                        \n                    \n\n            \n                \n                    Column that employs the PasswordTransformer to hash passwords before writing to database\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UserRoles[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, role => role.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/user.entity.ts:48\n                        \n                    \n\n            \n                \n                    Column to represent a one to many relationship with the roles entity\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/user.entity.ts:24\n                        \n                    \n\n            \n                \n                    Username column\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { Exclude } from 'class-transformer';\nimport { Column, Entity, OneToMany, PrimaryGeneratedColumn } from 'typeorm';\n\nimport { PasswordTransformer } from './password.transformer';\nimport { UserRoles } from './user-role.entity';\n\n/**\n * User Entity Class\n */\n@Entity({\n  name: 'users',\n})\nexport class User {\n  /**\n   * UUID column\n   */\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  /**\n   * Username column\n   */\n  @Column({ unique: true })\n  username: string;\n\n  /**\n   * Name column\n   */\n  @Column()\n  name: string;\n\n  /**\n   * Email column\n   */\n  @Column()\n  email: string;\n\n  /**\n   * Gravatar column (gravatar url)\n   */\n  @Column()\n  gravatar: string;\n\n  /**\n   * Column to represent a one to many relationship with the roles entity\n   */\n  @OneToMany(() => UserRoles, (role) => role.user)\n  roles: UserRoles[];\n\n  /**\n   * Column that employs the PasswordTransformer to hash passwords before writing to database\n   */\n  @Column({\n    name: 'password',\n    length: 255,\n    transformer: new PasswordTransformer(),\n    select: false,\n  })\n  @Exclude()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserRoles.html":{"url":"entities/UserRoles.html","title":"entity - UserRoles","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserRoles\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/users/user-role.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                User Roles Entity Class\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                role\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/user-role.entity.ts:16\n                        \n                    \n\n            \n                \n                    UUID column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UserRolesEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: UserRolesEnum, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/user-role.entity.ts:27\n                        \n                    \n\n            \n                \n                    Column for role based access\nBeware this default app role will permit every created profile to delete other profiles\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.roles, {onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/users/user-role.entity.ts:35\n                        \n                    \n\n            \n                \n                    Column to represent a many to one relationship with the profile entity\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\n\nimport { UserRolesEnum } from '@starter/api-types';\n\nimport { User } from './user.entity';\n\n/**\n * User Roles Entity Class\n */\n@Entity()\nexport class UserRoles {\n  /**\n   * UUID column\n   */\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  /**\n   * Column for role based access\n   * Beware this default app role will permit every created profile to delete other profiles\n   */\n  @Column({\n    type: 'enum',\n    enum: UserRolesEnum,\n    default: UserRolesEnum.SUDO,\n  })\n  role: UserRolesEnum;\n\n  /**\n   * Column to represent a many to one relationship with the profile entity\n   */\n  @ManyToOne(() => User, (user) => user.roles, {\n    onDelete: 'CASCADE',\n  })\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v1/users\n            \n\n\n            \n                Description\n            \n            \n                Users Controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteUserByUsername\n                            \n                            \n                                getUser\n                            \n                            \n                                    Async\n                                getUserByUsername\n                            \n                            \n                                    Async\n                                patchUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUserByUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUserByUsername(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':username')@UseGuards(PoliciesGuard)@CheckPolicies(new DeleteUserPolicyHandler())@ApiResponse({status: 200, description: 'Delete User Request Received'})@ApiResponse({status: 400, description: 'Delete User Request Failed'})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/users/users.controller.ts:85\n                \n            \n\n\n            \n                \n                    Removes a user from the database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the username to remove\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        whether or not the user has been deleted\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('user')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/users/users.controller.ts:41\n                \n            \n\n\n            \n                \n                    Retrieves current authenticated user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        queried user data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserByUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByUsername(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':username')@ApiResponse({status: 200, description: 'Fetch User Request Received'})@ApiResponse({status: 400, description: 'Fetch User Request Failed'})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/users/users.controller.ts:53\n                \n            \n\n\n            \n                \n                    Retrieves a particular user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the user given username to fetch\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        queried user data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        patchUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    patchUser(payload: PatchUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@ApiResponse({status: 200, description: 'Patch User Request Received'})@ApiResponse({status: 400, description: 'Patch User Request Failed'})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/users/users.controller.ts:71\n                \n            \n\n\n            \n                \n                    Edit a user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                PatchUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        mutated user data\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Request,\n  UseGuards,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse, ApiTags } from '@nestjs/swagger';\n\nimport { IGenericMessageBody } from '@starter/api-types';\n\nimport { CheckPolicies } from '../casl/check-policies.decorator';\nimport { PoliciesGuard } from '../casl/policies.guard';\nimport { DeleteUserPolicyHandler } from '../casl/policy-handlers';\nimport { PatchUserDto } from './dto/patch-user.dto';\nimport { User } from './user.entity';\nimport { UsersService } from './users.service';\n\n/**\n * Users Controller\n */\n@ApiBearerAuth()\n@ApiTags('users')\n@Controller('v1/users')\nexport class UsersController {\n  /**\n   * Constructor\n   * @param usersService\n   */\n  constructor(private readonly usersService: UsersService) {}\n\n  /**\n   * Retrieves current authenticated user\n   * @returns {Promise} queried user data\n   */\n  @Get('user')\n  getUser(@Request() req) {\n    return req.user;\n  }\n\n  /**\n   * Retrieves a particular user\n   * @param username the user given username to fetch\n   * @returns {Promise} queried user data\n   */\n  @Get(':username')\n  @ApiResponse({ status: 200, description: 'Fetch User Request Received' })\n  @ApiResponse({ status: 400, description: 'Fetch User Request Failed' })\n  async getUserByUsername(@Param('username') username: string): Promise {\n    const user = await this.usersService.getByUsername(username);\n    if (!user) {\n      throw new BadRequestException(\n        'The user with that username could not be found.',\n      );\n    }\n    return user;\n  }\n\n  /**\n   * Edit a user\n   * @param {RegisterPayload} payload\n   * @returns {Promise} mutated user data\n   */\n  @Patch()\n  @ApiResponse({ status: 200, description: 'Patch User Request Received' })\n  @ApiResponse({ status: 400, description: 'Patch User Request Failed' })\n  async patchUser(@Body() payload: PatchUserDto): Promise {\n    return this.usersService.edit(payload);\n  }\n\n  /**\n   * Removes a user from the database\n   * @param {string} username the username to remove\n   * @returns {Promise} whether or not the user has been deleted\n   */\n  @Delete(':username')\n  @UseGuards(PoliciesGuard)\n  @CheckPolicies(new DeleteUserPolicyHandler())\n  @ApiResponse({ status: 200, description: 'Delete User Request Received' })\n  @ApiResponse({ status: 400, description: 'Delete User Request Failed' })\n  async deleteUserByUsername(\n    @Param('username') username: string,\n  ): Promise {\n    return this.usersService.delete(username);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nCaslFactory\n\nCaslFactory\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nCaslFactory->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CaslFactory\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_GUARD } from '@nestjs/core';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { JwtAuthGuard } from '../auth/jwt-auth.guard';\nimport { CaslFactory } from '../casl/casl.factory';\nimport { PoliciesGuard } from '../casl/policies.guard';\nimport { UserRoles } from './user-role.entity';\nimport { User } from './user.entity';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User, UserRoles])],\n  providers: [\n    UsersService,\n    {\n      provide: APP_GUARD,\n      useClass: JwtAuthGuard,\n    },\n    PoliciesGuard,\n    CaslFactory,\n  ],\n  controllers: [UsersController],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/users/users.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Users Service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                edit\n                            \n                            \n                                get\n                            \n                            \n                                getByUsername\n                            \n                            \n                                getByUsernameAndPass\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, userRolesRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/users/users.service.ts:22\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRolesRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(payload: RegisterDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/users/users.service.ts:76\n                \n            \n\n\n            \n                \n                    Create a user with RegisterPayload fields\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user payload\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        data from the created user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(username: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/users/users.service.ts:131\n                \n            \n\n\n            \n                \n                    Delete user given a username\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        whether or not the delete operation was completed\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        edit\n                        \n                    \n                \n            \n            \n                \n                    \n                    edit(payload: PatchUserDto)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/users/users.service.ts:108\n                \n            \n\n\n            \n                \n                    Edit user data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                PatchUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        mutated user data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(id: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/users/users.service.ts:40\n                \n            \n\n\n            \n                \n                    Fetches user from database by UUID\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        data from queried user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByUsername\n                        \n                    \n                \n            \n            \n                \ngetByUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/users/users.service.ts:49\n                \n            \n\n\n            \n                \n                    Fetches user from database by username\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        data from queried user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByUsernameAndPass\n                        \n                    \n                \n            \n            \n                \ngetByUsernameAndPass(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/users/users.service.ts:59\n                \n            \n\n\n            \n                \n                    Fetches user by username and hashed password\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        data from queried user\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotAcceptableException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport * as crypto from 'crypto';\nimport { url } from 'gravatar';\nimport { Repository } from 'typeorm';\n\nimport { IGenericMessageBody } from '@starter/api-types';\n\nimport { RegisterDto } from '../auth/dto/register.dto';\nimport { PatchUserDto } from './dto/patch-user.dto';\nimport { UserRoles } from './user-role.entity';\nimport { User } from './user.entity';\n\n/**\n * Users Service\n */\n@Injectable()\nexport class UsersService {\n  /**\n   * Constructor\n   * @param {Repository} userRepository\n   * @param {Repository} rolesRepository\n   */\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n    @InjectRepository(UserRoles)\n    private readonly userRolesRepository: Repository,\n  ) {}\n\n  /**\n   * Fetches user from database by UUID\n   * @param {number} id\n   * @returns {Promise} data from queried user\n   */\n  get(id: number): Promise {\n    return this.userRepository.findOne({ where: { id }, relations: ['roles'] });\n  }\n\n  /**\n   * Fetches user from database by username\n   * @param {string} username\n   * @returns {Promise} data from queried user\n   */\n  getByUsername(username: string): Promise {\n    return this.userRepository.findOneBy({ username });\n  }\n\n  /**\n   * Fetches user by username and hashed password\n   * @param {string} username\n   * @param {string} password\n   * @returns {Promise} data from queried user\n   */\n  getByUsernameAndPass(username: string, password: string): Promise {\n    return this.userRepository\n      .createQueryBuilder('users')\n      .where('users.username = :username and users.password = :password')\n      .setParameter('username', username)\n      .setParameter(\n        'password',\n        crypto.createHmac('sha256', password).digest('hex'),\n      )\n      .getOne();\n  }\n\n  /**\n   * Create a user with RegisterPayload fields\n   * @param {RegisterDto} payload user payload\n   * @returns {Promise} data from the created user\n   */\n  async create(payload: RegisterDto): Promise {\n    const user = await this.getByUsername(payload.username);\n\n    if (user) {\n      throw new NotAcceptableException(\n        'The account with the provided username currently exists. Please choose another one.',\n      );\n    }\n\n    // Remark: Default role is set to sudo\n    const roles: UserRoles[] = [new UserRoles()];\n    await this.userRolesRepository.save(roles);\n\n    return this.userRepository.save(\n      this.userRepository.create({\n        ...payload,\n        roles,\n        gravatar: url(payload.email, {\n          protocol: 'http',\n          s: '200',\n          r: 'pg',\n          d: '404',\n        }),\n      }),\n    );\n  }\n\n  /**\n   * Edit user data\n   * @param {PatchUserDto} payload\n   * @returns {Promise} mutated user data\n   */\n  async edit(payload: PatchUserDto): Promise {\n    const { username } = payload;\n    const user = await this.getByUsername(username);\n    if (user) {\n      Object.keys(payload).forEach((key) => {\n        if (key === 'password') {\n          key = crypto.createHmac('sha256', key).digest('hex');\n        }\n        user[key] = payload[key];\n      });\n      return this.userRepository.save(user);\n    } else {\n      throw new BadRequestException(\n        'The user with that username does not exist in the system. Please try another username.',\n      );\n    }\n  }\n\n  /**\n   * Delete user given a username\n   * @param {string} username\n   * @returns {Promise} whether or not the delete operation was completed\n   */\n  async delete(username: string): Promise {\n    const deleted = await this.userRepository.delete({ username });\n    if (deleted.affected === 1) {\n      return { message: `Deleted ${username} from records` };\n    } else {\n      throw new BadRequestException(\n        `Failed to delete a user by the name of ${username}.`,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/api/src/app.controller.test.ts\n            \n            variable\n            moduleMocker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app.controller.ts\n            \n            controller\n            AppController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                apps/api/src/app.service.ts\n            \n            injectable\n            AppService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/api/src/auth/auth.controller.test.ts\n            \n            variable\n            moduleMocker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/api/src/auth/auth.service.test.ts\n            \n            variable\n            user\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/auth/auth.service.test.ts\n            \n            variable\n            userRole\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                apps/api/src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/api/src/auth/dto/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                apps/api/src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/api/src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/api/src/auth/public.decorator.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/auth/public.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/casl/casl.factory.ts\n            \n            injectable\n            CaslFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/casl/check-policies.decorator.ts\n            \n            variable\n            CHECK_POLICIES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/casl/check-policies.decorator.ts\n            \n            variable\n            CheckPolicies\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/casl/policies.guard.ts\n            \n            guard\n            PoliciesGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/api/src/casl/policy-handlers.ts\n            \n            class\n            DeleteUserPolicyHandler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/casl/policy-handlers.ts\n            \n            interface\n            IPolicyHandler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/main.ts\n            \n            variable\n            OPEN_API_CURRENT_VERSION\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/api/src/main.ts\n            \n            variable\n            OPEN_API_DESCRIPTION\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/api/src/main.ts\n            \n            variable\n            OPEN_API_NAME\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/api/src/main.ts\n            \n            variable\n            OPEN_API_ROOT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/api/src/users/dto/patch-user.dto.ts\n            \n            class\n            PatchUserDto\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                apps/api/src/users/password.transformer.ts\n            \n            class\n            PasswordTransformer\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                apps/api/src/users/user-role.entity.ts\n            \n            entity\n            UserRoles\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/api/src/users/user.entity.ts\n            \n            entity\n            User\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/api/src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                apps/api/src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                100 %\n                (8/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~14.1.1\n        \n            @angular/cdk : ^14.2.0\n        \n            @angular/common : ~14.1.1\n        \n            @angular/compiler : ~14.1.1\n        \n            @angular/core : ~14.1.1\n        \n            @angular/flex-layout : ^14.0.0-beta.40\n        \n            @angular/forms : ~14.1.1\n        \n            @angular/material : ^14.2.0\n        \n            @angular/platform-browser : ~14.1.1\n        \n            @angular/platform-browser-dynamic : ~14.1.1\n        \n            @angular/router : ~14.1.1\n        \n            @casl/ability : ^6.0.0\n        \n            @fastify/helmet : ^9.1.0\n        \n            @fastify/rate-limit : ^7.3.0\n        \n            @fastify/static : ^6.5.0\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^9.0.0\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-fastify : ^9.0.11\n        \n            @nestjs/serve-static : ^3.0.0\n        \n            @nestjs/swagger : ^6.0.5\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            @nrwl/angular : 14.5.10\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            gravatar : ^1.8.2\n        \n            joi : ^17.6.0\n        \n            moment : ^2.29.4\n        \n            mysql2 : ^2.3.3\n        \n            nest-winston : ^1.7.0\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            typeorm : ^0.3.7\n        \n            winston : ^3.8.1\n        \n            winston-daily-rotate-file : ^4.7.1\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAPI Starter\n\n\n  \n\n\nA progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n\n\n    \n    \n    \n    \n    \n\n\nTable of Contents:\n\nDescription\nPrerequisites\nDeployment\nEnvironment Configuration\nChoosing a Web Framework\nHTTP2\nChoosing a Database\nTesting\nTypeDocs\nLogs\n\n🔎 This repo was created with Nx.\n📚 Description\nThis boilerplate is made to quickly prototype backend applications. It comes with authentication/authorization, logging, crud features and database persistence out of the box.\n\n🛠️ Prerequisites\nNon Docker\n\nPlease make sure to have Node.js (16+) locally by downloading the Javascript runtime via brew, choco, or apt-get.\n\nPlease make sure to have MYSQL locally by deploying a web server stack like XAMPP. The control panel can then trigger MYSQL to start on localhost. MYSQL can be downloaded standalone via brew, choco, or apt-get.\n\n\nDocker 🐳\n\nPlease make sure to have Docker Desktop operational to quickly compose the required dependencies. Then follow the docker procedure outlined below.\n\n\n🚀 Deployment\nManual Deployment without Docker\n\nClone the repo via git clone https://github.com/msanvarov/nest-rest-typeorm-boilerplate.\n\nDownload dependencies via npm i or yarn.\n\nCreate a .env file via the cp .env.example .env command and replace the existing environment variable placeholders with valid responses.\n\nStart the api in development mode by using npm run start (the app will be exposed on http://localhost:3333; not to conflict with React, Angular, or Vue ports).\n\n\n\nOptional deployment of the UI\n\n\n\nThis repo comes with a UI built with Angular - that can be accessed via http://localhost:4200.\n\nTo start the UI, start a new terminal window and run npm run start --project ui.\n\n\n\nRemark: In the docker deployment, the UI is automatically started and served by the API.\n\n\n\n\nDeploying with Docker 🐳\n\nExecute the following command in-app directory:\n\n# creates and loads the docker container in detached mode with the required configuration\n$ docker-compose up -d\nThe following command will download dependencies and execute the web application on http://localhost:80 (deployed behind a Nginx reverse proxy).\n\n\n🔒 Environment Configuration\nBy default, the application comes with a config module that can read in every environment variable from the .env file.\nAPP_ENV - the application environment to execute as, either in development or production. Determines the type of logging options to utilize. Options: development or production.\nWEBTOKEN_ENCRYPTION_KEY - the key to encrypt/decrypt web tokens with. Make sure to generate a random alphanumeric string for this.\nWEBTOKEN_EXPIRATION_TIME - the time in seconds when the web token will expire; by default, it's 2400 seconds which is 40 mins.\nDB_TYPE - the type of database connection to use.\nDB_USERNAME - username for authenticating against the database.\nDB_PASSWORD - password for authenticating against the database, can be left empty if a password is not needed (not safe).\nDB_HOST - the endpoint where this database sits (default is localhost but can be set explicitly).\nDB_PORT - default ports for different types of database connections.\nDB_DATABASE - the actual database name to perform operations on.\n\n🏗 Choosing a Web Framework\nThis boilerplate comes with Fastify out of the box as it offers performance benefits over Express. But the Express adapter is still accessible on a different branch.\n\n💾 Choosing a Database\nBy default MYSQL/MariaDB are the database of choice but TypeORM supports other database types like SQLite, Postgres, MongoDB, and MSSQL. To use anything other than MYSQL/MariaDB, change the configuration in the .env file, and download the corresponding wrapper library, like SQLite3.\n\nCheck https://typeorm.io/ for supported database types.\n\nRemark: For MongoDB, TypeORM is not as feature-rich as Mongoose. Thus, I created a boilerplate for Nest and Mongoose.\n\n🦾 HTTP/2\nLuckily, Fastify can enable HTTP2 over either HTTPS (h2) or plaintext (h2c) out of the box. This boilerplate makes use of this on the feat/http2 branch where a self-signed certificate was created for testing this capability. The certificate is located in the certs folder. For production, please use a valid certificate.\nThe self signed certificate can be generated via OpenSSL:\n$ openssl req -x509 -newkey rsa:4096 -keyout api-key.pem -out api-cert.pem -days 365 -nodes\n\nRemark: Express can be ran with HTTP/2 by employing the spdy library.\n\n\n✅ Testing\nDocker 🐳\n# Start the docker container if it's not running\n$ docker start nest-rest-typeorm-api\n\n# unit tests\n$ docker exec -it nest-rest-typeorm-api npm run test\nNon-Docker\n# execute test\n$ npm run test\n💡 TypeDocs\nThe documentation for this boilerplate can be found on Github pages.\nThe docs can be generated on-demand, by typing npm run typedocs:api:start. This will produce a docs/api folder with the required front-end files and start hosting on localhost.\n\nRemark: The docs for the ui are generated on-demand, by typing npm run typedocs:ui:start. This will produce a docs/ui folder with the required front-end files and start hosting on localhost.\n\n# generate docs for api code\n$ npm run typedocs:api:start\n📝 Open API\nOut of the box, the web app comes with Swagger; an open api specification, that is used to describe RESTful APIs. Nest provides a dedicated module to work with it.\nThe configuration for Swagger can be found at this location.\n\n✨ TypeORM\nTypeORM is an object-relational mapping that acts as an abstraction layer over operations on databases. Please view the documentation for further details.\nThe configuration for TypeORM can be found in the app module.\n\n🔊 Logs\nThis boilerplate comes with a Winston module for extensive logging, the configurations for Winston can be found in the app module.\n\n🏗️ Progress\n\n\n\nBranches\nStatus\n\n\n\n\nmain\n✅\n\n\nfeat/*\n🚧\n\n\n\n Remark: This template was employed to create a [Real World example app](https://github.com/gothinkster/realworld) on [Github](). -->\n\n\n👥 Support\nPRs are appreciated, I fully rely on the passion ❤️ of the OS developers.\n\nLicense\nThis starter API is MIT licensed.\nAuthor\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2018 msanvarov\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CaslModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CaslModule\n\n\n\ncluster_CaslModule_exports\n\n\n\ncluster_CaslModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\n\n\nCaslModule\n\nCaslModule\n\nAppModule -->\n\nCaslModule->AppModule\n\n\n\n\n\nCaslFactory \n\nCaslFactory \n\nCaslFactory  -->\n\nCaslModule->CaslFactory \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nCaslFactory\n\nCaslFactory\n\nCaslModule -->\n\nCaslFactory->CaslModule\n\n\n\nUsersModule -->\n\nCaslFactory->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            License : MIT\n        \n            Author : Sal Anvarov\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppAbility   (apps/.../casl.factory.ts)\n                        \n                        \n                            PolicyHandler   (apps/.../policy-handlers.ts)\n                        \n                        \n                            PolicyHandlerCallback   (apps/.../policy-handlers.ts)\n                        \n                        \n                            Subjects   (apps/.../casl.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/casl/casl.factory.ts\n    \n    \n        \n            \n                \n                    \n                    AppAbility\n                \n            \n            \n                \n                        Ability<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Subjects\n                \n            \n            \n                \n                            InferSubjects<> | \"all\"\n\n                \n            \n        \n    \n    apps/api/src/casl/policy-handlers.ts\n    \n    \n        \n            \n                \n                    \n                    PolicyHandler\n                \n            \n            \n                \n                            IPolicyHandler | PolicyHandlerCallback\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PolicyHandlerCallback\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CHECK_POLICIES_KEY   (apps/.../check-policies.decorator.ts)\n                        \n                        \n                            CheckPolicies   (apps/.../check-policies.decorator.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (apps/.../public.decorator.ts)\n                        \n                        \n                            moduleMocker   (apps/.../app.controller.test.ts)\n                        \n                        \n                            moduleMocker   (apps/.../auth.controller.test.ts)\n                        \n                        \n                            OPEN_API_CURRENT_VERSION   (apps/.../main.ts)\n                        \n                        \n                            OPEN_API_DESCRIPTION   (apps/.../main.ts)\n                        \n                        \n                            OPEN_API_NAME   (apps/.../main.ts)\n                        \n                        \n                            OPEN_API_ROOT   (apps/.../main.ts)\n                        \n                        \n                            Public   (apps/.../public.decorator.ts)\n                        \n                        \n                            user   (apps/.../auth.service.test.ts)\n                        \n                        \n                            userRole   (apps/.../auth.service.test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/casl/check-policies.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CHECK_POLICIES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'check_policy'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CheckPolicies\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...handlers: PolicyHandler[]) =>\n  SetMetadata(CHECK_POLICIES_KEY, handlers)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n}\n                    \n                \n\n\n        \n    \n\n    apps/api/src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n}\n                    \n                \n\n\n        \n    \n\n    apps/api/src/auth/public.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app.controller.test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        moduleMocker\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ModuleMocker(global)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/auth/auth.controller.test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        moduleMocker\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ModuleMocker(global)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OPEN_API_CURRENT_VERSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1.0'\n                    \n                \n\n            \n                \n                    Current version of the api\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OPEN_API_DESCRIPTION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'API Description'\n                    \n                \n\n            \n                \n                    A short description for api\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OPEN_API_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'API'\n                    \n                \n\n            \n                \n                    The name given to the api\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OPEN_API_ROOT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'api/v1/docs'\n                    \n                \n\n            \n                \n                    The endpoint for open api ui\n\n                \n            \n\n        \n    \n\n    apps/api/src/auth/auth.service.test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : plainToClass(User, {\n  id: 1,\n  email: 'test@user.com',\n  roles: [\n    {\n      id: 1,\n      role: UserRolesEnum.SUDO,\n      user: 1,\n    },\n  ],\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userRole\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRoles\n\n                    \n                \n                \n                    \n                        Default value : plainToClass(UserRoles, {\n  id: 1,\n  role: UserRolesEnum.SUDO,\n  user,\n} as UserRoles)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
